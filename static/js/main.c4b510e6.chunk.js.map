{"version":3,"sources":["components/text/text.component.tsx","colors.js","components/nav/nav.component.tsx","components/rule/rule.component.tsx","components/footer/footer.component.tsx","components/subject/subject.component.tsx","components/subject-links/subject-links.component.tsx","components/sections/design-systems.component.tsx","components/sections/prototyping.component.tsx","components/sections/toolsAndOps.component.tsx","components/sections/photography.component.tsx","components/sections/editorialAndLookbook.component.tsx","assets/misc/jason_chen_resume_2020.pdf","components/sections/contact.component.tsx","pages/Main/Main.tsx","assets/images/pgh.jpg","assets/images/montanadoro.jpg","assets/images/bodega.jpg","assets/images/honolulu.jpg","assets/images/halfmoon.jpg","pages/Photography/Photography.tsx","pages/UnderConstruction/UnderConstruction.component.tsx","pages/NotFound/NotFound.component.tsx","components/templates/prose/prose.component.tsx","components/list/list.component.tsx","components/ImageWithCaption/ImageWithCaption.component.tsx","assets/images/projects/OTM/OTMFastCo.png","assets/images/projects/OTM/OTMBanner.png","assets/images/projects/OTM/OTMEmblem.png","assets/images/projects/OTM/OTMFramerX.png","assets/images/projects/OTM/OTMProtopie.png","assets/images/projects/OTM/OTMRBC.png","assets/images/projects/OTM/OTMLoading.png","pages/Projects/OTM.tsx","assets/images/projects/intuit/accordion_ids.gif","assets/images/projects/intuit/accordion_tron.gif","pages/Projects/IDSAccordion.tsx","assets/images/projects/intuit/docupload_pre.png","assets/images/projects/intuit/docupload.gif","pages/Projects/DocUploader.tsx","assets/images/projects/SRLegacy/SRLegacy_alpha.png","assets/images/projects/SRLegacy/SRLegacy_landing.png","assets/images/projects/SRLegacy/SRLegacy_home.png","assets/images/projects/SRLegacy/SRLegacy_spec.png","assets/images/projects/SRLegacy/SRLegacy_STRAT_card.png","assets/images/projects/SRLegacy/SRLegacy_logo_2.svg","assets/images/projects/SRLegacy/SRLegacy_logo_4.svg","assets/images/projects/SRLegacy/SRLegacy_logo_6.svg","assets/images/projects/SRLegacy/SRLegacy_logo_final.svg","pages/Projects/SRLegacy.tsx","assets/images/projects/WaitTask/WaitTask.png","assets/images/projects/WaitTask/WaitTaskScreens.png","pages/Projects/WaitTaskV2.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Text","textAlign","color","size","text","textStyles","marginTop","marginRight","marginBottom","marginLeft","textClass","classNames","className","style","theme","primary","accent","black","white","Nav","useEffect","handleScroll","navRate","window","scrollY","nav","document","getElementById","width","addEventListener","removeEventListener","id","onClick","scrollIntoView","behavior","Rule","Footer","Subject","title","description","children","subjectStyles","SubjectLinks","projects","map","project","link","external","target","rel","href","name","to","AlchemyLink","designSystemsAtBlendLink","StratRouletteLink","designSystemsDescription","DesignSystems","prototypingAtBlendLink","oneTapLink","prototypingDescription","Prototyping","saplingLink","toolsAndOpsDescription","ToolsAndOps","InstagramLink","photographyDescription","Photography","RoninDivisionLink","editorialAndLookbookDescription","EditorialAndLookbook","contactDescription","Contact","Resume","Main","src","pgh","alt","montanadoro","bodega","honolulu","halfmoon","UnderConstruction","NotFound","Prose","content","date","summary","c","section","contentBlock","type","List","ordered","listItems","ol","l","ul","ImageWithCaption","caption","iphone","OTM","OTMMarketingLink","ForumDemo","RBCDemo","FramerXDemo","summaryText","OTMBanner","OTMContent","OTMFastCo","OTMEmblem","OTMLoading","OTMRBC","OTMFramerX","OTMProtopie","IDSAccordion","Intuit","accordion_tron","IDSContent","accordion_ids","DocUploader","docupload","DocUploaderContent","docupload_pre","SRLegacy","SRLegacyContent","SRLegacy_Alpha","SRLegacy_landing","SRLegacy_spec","SRLegacy_logo_2","SRLegacy_logo_4","SRLegacy_logo_6","SRLegacy_logo_final","SRLegacy_STRAT_card","SRLegacy_home","WaitTaskV2","prototype","WaitTask","WaitTaskContent","WaitTaskScreens","App","exact","path","component","WaitTAskV2","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.c4b510e6.chunk.js","sourcesContent":["import React from 'react';\nimport { ITextProps, ITextStyles } from './text.model';\nimport './text.style.scss';\nimport classNames from 'classnames';\n\nexport const Text = ({\n  textAlign = 'left',\n  color = 'inherit',\n  size,\n  text,\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n}: ITextProps) => {\n  const textStyles: ITextStyles = {\n    textAlign,\n    color,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n  };\n\n  const textClass = classNames('text', {\n    'display-1': size === 'display-1',\n    'display-2': size === 'display-2',\n    'header-1': size === 'header-1',\n    'subheader-1': size === 'subheader-1',\n    'body-1': size === 'body-1',\n    'body-2': size === 'body-2',\n    'link-1': size === 'link-1',\n    'link-2': size === 'link-2',\n  });\n\n  return (\n    <div className={textClass} style={textStyles}>\n      {text}\n    </div>\n  );\n};\n","export const theme = {\n  primary: '#11593f',\n  accent: '#feda7b',\n  black: '#000',\n  white: '#fff',\n};\n\nexport default theme;\n","import React, { useEffect } from 'react';\nimport { Text } from '../../components/text/text.component';\nimport './nav.style.scss';\nimport { theme } from '../../colors.js';\n\nexport const Nav = () => {\n  useEffect(() => {\n    const handleScroll = () => {\n      const navRate = window.scrollY / 20;\n      const nav = document.getElementById('nav-selector');\n      if (nav) {\n        if (window.scrollY < 500) {\n          nav.style.width = 50 - navRate + '%';\n        } else {\n          nav.style.width = '25%';\n        }\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  });\n\n  const clickProjects = () => {\n    document\n      .getElementById('scroll-projects')\n      ?.scrollIntoView({ behavior: 'smooth' });\n  };\n  const clickAbout = () => {\n    document\n      .getElementById('scroll-about')\n      ?.scrollIntoView({ behavior: 'smooth' });\n  };\n  const clickPhotography = () => {\n    document\n      .getElementById('scroll-photography')\n      ?.scrollIntoView({ behavior: 'smooth' });\n  };\n  const clickContact = () => {\n    document\n      .getElementById('scroll-contact')\n      ?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"nav\" id=\"nav-selector\">\n      <div className=\"nav-content\">\n        <Text size=\"display-1\" color={theme.primary} text=\"Jason Chen\" />\n\n        <ul className=\"nav-menu\">\n          <li id=\"about\" onClick={clickAbout}>\n            <Text size=\"subheader-1\" color={theme.primary} text=\"About\" />\n          </li>\n          <li id=\"projects\" onClick={clickProjects}>\n            <Text size=\"subheader-1\" color={theme.primary} text=\"Projects\" />\n          </li>\n          <li id=\"photography\" onClick={clickPhotography}>\n            <Text size=\"subheader-1\" color={theme.primary} text=\"Photography\" />\n          </li>\n          <li id=\"resume\" onClick={clickContact}>\n            <Text size=\"subheader-1\" color={theme.primary} text=\"Contact\" />\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './rule.style.scss';\n\nexport const Rule = () => {\n  return <div className=\"rule\" />;\n};\n","import React from 'react';\nimport { IFooterProps, IFooterStyles } from './footer.model';\nimport './footer.style.scss';\nimport { Text } from '../text/text.component';\n\nexport const Footer = ({\n  color = 'inherit',\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n}: IFooterProps) => {\n  const textStyles: IFooterStyles = {\n    color,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n  };\n\n  return (\n    <footer style={textStyles}>\n      <Text\n        size=\"body-2\"\n        color={color}\n        text=\"Created in React &amp; designed with Figma\"\n        marginBottom={0}\n      />\n\n      <Text\n        size=\"body-2\"\n        color={color}\n        text=\"&copy; JASON CHEN 2020\"\n        marginBottom={0}\n      />\n    </footer>\n  );\n};\n","import React from 'react';\nimport { ISubjectProps, ISubjectStyles } from './subject.model';\nimport './subject.style.scss';\nimport { Text } from '../text/text.component';\nimport { theme } from '../../colors.js';\n\nexport const Subject = ({\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n  title,\n  description,\n  children,\n}: ISubjectProps) => {\n  const subjectStyles: ISubjectStyles = {\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n  };\n\n  return (\n    <div className=\"subject\" style={subjectStyles}>\n      <Text\n        size=\"display-1\"\n        text={title}\n        color={theme.accent}\n        marginBottom={32}\n      />\n      <Text\n        size=\"body-1\"\n        text={description}\n        color={theme.white}\n        marginBottom={8}\n      />\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { ISubjectLinksProps } from './subject-links.model';\nimport './subject-links.style.scss';\nimport { Text } from '../text/text.component';\nimport { theme } from '../../colors.js';\nimport { Link } from 'react-router-dom';\n\nexport const SubjectLinks = ({ projects }: ISubjectLinksProps) => {\n  return (\n    <div className=\"subject-links\">\n      {projects.map((project) => {\n        if (project.link) {\n          if (project.external) {\n            return (\n              <div className=\"project-link\">\n                <a target=\"_blank\" rel=\"noreferrer\" href={project.link}>\n                  <Text\n                    size=\"link-1\"\n                    color={theme.accent}\n                    text={project.name}\n                  />\n                </a>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"project-link\">\n                <Link to={project.link as string} target=\"_blank\">\n                  <Text\n                    size=\"link-1\"\n                    color={theme.accent}\n                    text={project.name}\n                  />\n                </Link>\n              </div>\n            );\n          }\n        } else {\n          return (\n            <Text size=\"link-1\" color={theme.accent} text={project.name} />\n          );\n        }\n      })}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { Link } from 'react-router-dom';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\n// TODO add proper links to project pages\n\nconst AlchemyLink = (\n  <Link className=\"action-link\" to=\"/underconstruction\" target=\"_blank\">\n    <Text size=\"link-1\" text=\"Alchemy Design system\" />\n  </Link>\n);\n\nconst designSystemsAtBlendLink = (\n  <Link className=\"action-link\" to=\"/underconstruction\" target=\"_blank\">\n    <Text size=\"link-1\" text=\"here\" />\n  </Link>\n);\n\nconst StratRouletteLink = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://www.stratroulette.com'}\n  >\n    <Text size=\"link-1\" text=\"StratRoulette\" />\n  </a>\n);\n\nconst designSystemsDescription: JSX.Element = (\n  <div>\n    Design systems is currently my passion. In one way or another, I got my\n    first taste of design systems while I was at Intuit, where I owned and\n    contributed to an accordion component. Then, I moved to Blend, where I\n    helped bring forth to light {AlchemyLink}, a themeable design system to\n    support Blend’s various products. Before working on Alchemy, I helped create\n    and maintain Figma libraries, write documentation, address design debt, and\n    host UI reviews for our fellow product designers. You can read more about my\n    journey to design systems {designSystemsAtBlendLink}. On the side, I work on\n    a side project called {StratRouletteLink} where I’ve led the design systems\n    effort by designing and coding the UI library and several main features of\n    the application.\n  </div>\n);\n\n// TODO add proper links to external pages ie stratroulette.com\nexport const DesignSystems = () => {\n  return (\n    <Subject title=\"Design Systems\" description={designSystemsDescription}>\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Alchemy',\n            link: 'underconstruction',\n            external: false,\n          },\n          {\n            name: 'StratRoulette',\n            link: 'https://www.stratroulette.com/',\n            external: true,\n          },\n          {\n            name: 'Intuit Design Systems Accordion',\n            link: 'IDSAccordion',\n            external: false,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default DesignSystems;\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { Link } from 'react-router-dom';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\nconst prototypingAtBlendLink = (\n  <Link className=\"action-link\" to=\"/underconstruction\" target=\"_blank\">\n    <Text size=\"link-1\" text=\"here\" />\n  </Link>\n);\n\nconst oneTapLink = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://blend.com/one-tap/'}\n  >\n    <Text size=\"link-1\" text=\"One Tap Mobile\" />\n  </a>\n);\n\nconst prototypingDescription: JSX.Element = (\n  <div>\n    At Blend, I was fortunate enough to create a whole process around\n    prototyping and make it a reality for Engineering, Product, and Design. You\n    can read more about my journey {prototypingAtBlendLink}. One project that I\n    hold dear to my heart is {oneTapLink}, as I’ve been able to leverage the\n    prototype for user studies, sales demos, and exploratory concepts to help\n    product designers design faster. My high fidelity prototypes (especially in\n    React) have seen to be useful for both design and engineering, as they serve\n    as an addition to mocks.\n  </div>\n);\n\nexport const Prototyping = () => {\n  return (\n    <Subject title=\"Prototyping\" description={prototypingDescription}>\n      <SubjectLinks\n        projects={[\n          {\n            name: 'One Tap Mobile (OTM)',\n            link: 'OTM',\n            external: false,\n          },\n          {\n            name: 'Wait Task V2',\n            link: 'WaitTaskV2',\n            external: false,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default Prototyping;\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { Link } from 'react-router-dom';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\nconst saplingLink = (\n  <Link className=\"action-link\" to=\"/underconstruction\" target=\"_blank\">\n    <Text size=\"link-1\" text=\"Sapling\" />\n  </Link>\n);\n\nconst toolsAndOpsDescription: JSX.Element = (\n  <div>\n    At Blend, I’ve also been fortunate enough to help with design ops and create\n    tooling to help product designers do their best work. To do this, I’ve found\n    that I’ve been able to use my programming knowledge to create small programs\n    or Figma plugins. {saplingLink}, for example, helps product designers\n    organize their pages within figma so their cross functional partners can\n    better reference screens to foster easier collaboration. Furthermore, I’ve\n    been able to help educate and consult with product designers for any\n    component help they need via UI reviews at Blend.\n  </div>\n);\n\nexport const ToolsAndOps = () => {\n  return (\n    <Subject\n      title=\"Web Tools &amp; Design Ops\"\n      description={toolsAndOpsDescription}\n    >\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Sapling',\n            link: 'underconstruction',\n            external: false,\n          },\n          {\n            name: 'Abstract Migrate Tool',\n            link: 'underconstruction',\n            external: false,\n          },\n          {\n            name: 'Haven',\n            link: 'underconstruction',\n            external: false,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default ToolsAndOps;\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\nconst InstagramLink = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://www.instagram.com/me.dium'}\n  >\n    <Text size=\"link-1\" text=\"Instagram\" />\n  </a>\n);\n\nconst photographyDescription: JSX.Element = (\n  <div>\n    I’ve been shooting photography for a few years now - let’s say 8 years to\n    keep it simple. I’ve done everything from sports photography at CMU to event\n    photography and much more. As of the last few years, I started shooting\n    analogue (film) phtography as I can really focus in on composing a shot and\n    spend less time editing on the computer and more time outside taking\n    landscape photographs. You can also find me on {InstagramLink} to see my\n    latest film scans.\n  </div>\n);\n\nexport const Photography = () => {\n  return (\n    <Subject title=\"Photography\" description={photographyDescription}>\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Personal work',\n            link: 'photography',\n            external: false,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default Photography;\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\nconst RoninDivisionLink = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://www.ronindivision.com/'}\n  >\n    <Text size=\"link-1\" text=\"Ronin Division\" />\n  </a>\n);\n\nconst editorialAndLookbookDescription: JSX.Element = (\n  <div>\n    If I’m not out on the streets or in nature lugging my tripod around, I\n    occaisionally collaborate with my friend Brendan to work on photographing\n    lookbooks and editorials for a streetwear brand called {RoninDivisionLink}.\n    As someone that collects sneakers and enjoys streetwear, it’s always nice to\n    participate and give back to the streetwear community.\n  </div>\n);\n\nexport const EditorialAndLookbook = () => {\n  return (\n    <Subject\n      title=\"Editorial &amp; Lookbook\"\n      description={editorialAndLookbookDescription}\n    >\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Ronin Division FW20',\n            link: 'https://www.ronindivision.com/pages/fall2020-lookbook',\n            external: true,\n          },\n          {\n            name: 'Ronin Division Face Mask (COVID-19)',\n            link:\n              'https://www.instagram.com/p/CC_gBc7pbT2/?utm_source=ig_web_copy_link',\n            external: true,\n          },\n          {\n            name: 'Ronin Division FW18',\n            link: 'https://www.ronindivision.com/pages/fw18-lookbook',\n            external: true,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default EditorialAndLookbook;\n","export default __webpack_public_path__ + \"static/media/jason_chen_resume_2020.0a7e21c6.pdf\";","import React from 'react';\nimport { Subject } from '../subject/subject.component';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\nimport Resume from '../../assets/misc/jason_chen_resume_2020.pdf';\n\nconst contactDescription: JSX.Element = (\n  <div>\n    Want to learn more about my journey? Feel free to reach out! I’m always open\n    to talking to others about my role or even helping others figure out if\n    design technology is something they want to do. Maybe you just want to talk\n    about photography or sneakers - I’m always down for a chat over zoom or\n    coffee.\n  </div>\n);\n\nexport const Contact = () => {\n  return (\n    <Subject title=\"Contact\" description={contactDescription}>\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Email',\n            link: 'mailto:jasonc1@alumni.cmu.edu',\n            external: true,\n          },\n          {\n            name: 'LinkedIn',\n            link: 'https://www.linkedin.com/in/jchen10/',\n            external: true,\n          },\n          {\n            name: 'Resume',\n            link: Resume,\n            external: true,\n          },\n          {\n            name: 'Github',\n            link: 'https://github.com/jasonc1',\n            external: true,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport { Text } from '../../components/text/text.component';\nimport './main.style.scss';\nimport { theme } from '../../colors.js';\nimport { Nav } from '../../components/nav/nav.component';\nimport { Rule } from '../../components/rule/rule.component';\nimport { Footer } from '../../components/footer/footer.component';\nimport DesignSystems from '../../components/sections/design-systems.component';\nimport Prototyping from '../../components/sections/prototyping.component';\nimport ToolsAndOps from '../../components/sections/toolsAndOps.component';\nimport Photography from '../../components/sections/photography.component';\nimport EditorialAndLookbook from '../../components/sections/editorialAndLookbook.component';\nimport Contact from '../../components/sections/contact.component';\n\nexport const Main = () => {\n  return (\n    <div className=\"main\" id=\"main-selector\">\n      <Nav />\n      <div className=\"about main-container\" id=\"scroll-about\">\n        <div className=\"about-content\">\n          <Text\n            size=\"display-1\"\n            color={theme.accent}\n            text=\"I’m a design technologist, sneakerhead, mechanical keyboard enthusiast, and photographer.\"\n            marginBottom={32}\n          />\n          <Text\n            size=\"body-1\"\n            color={theme.accent}\n            text=\"Hi, I’m Jason. I used to be a developer, but now I sit at the intersection of design and code. My passion is building and maintaining design systems at the moment, and on the side I create tools for design ops, create high fidelity prototypes, contribute documentation, and much more. \"\n            marginBottom={24}\n          />\n          <Text\n            size=\"body-1\"\n            color={theme.accent}\n            text=\"I currently work at Blend as a Design Technologist frontlining the Alchemy Design Systems effort. I graduated from  Carnegie Mellon University with a B.S in Information Systems and an additional B.S. in  Human Computer Interaction. \"\n          />\n        </div>\n      </div>\n      <div className=\"projects main-container\" id=\"scroll-projects\">\n        <DesignSystems />\n        <ToolsAndOps />\n        <Prototyping />\n        <Rule />\n      </div>\n      <div className=\"photography main-container\" id=\"scroll-photography\">\n        <Photography />\n        <EditorialAndLookbook />\n        <Rule />\n      </div>\n      <div className=\"contact main-container\" id=\"scroll-contact\">\n        <div>\n          <Contact />\n          <Rule />\n        </div>\n\n        <Footer color={theme.accent} />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/pgh.8c16bcaa.jpg\";","export default __webpack_public_path__ + \"static/media/montanadoro.77b81c1f.jpg\";","export default __webpack_public_path__ + \"static/media/bodega.e90cdde4.jpg\";","export default __webpack_public_path__ + \"static/media/honolulu.e9130259.jpg\";","export default __webpack_public_path__ + \"static/media/halfmoon.ad55ff91.jpg\";","import React from 'react';\nimport './photography.style.scss';\nimport { Text } from '../../components/text/text.component';\nimport { Footer } from '../../components/footer/footer.component';\nimport { theme } from '../../colors.js';\nimport pgh from '../../assets/images/pgh.jpg';\nimport montanadoro from '../../assets/images/montanadoro.jpg';\nimport bodega from '../../assets/images/bodega.jpg';\nimport honolulu from '../../assets/images/honolulu.jpg';\nimport halfmoon from '../../assets/images/halfmoon.jpg';\n\nconst summary = `Here are just some of my favorite photographs that I’ve taken over the years. I shoot primarily 120 film (aka ‘medium format’), but sometimes I still use a Nikon FM2 for good old 35mm film - the stuff most of us grew up on before the digital age. For medium format, I currently own a Bronica ETRSi, Mamiya RZ67, and Plaubel Makina 67.`;\n\nexport const Photography = () => {\n  return (\n    <div className=\"photography-page\">\n      <Text\n        size=\"display-1\"\n        color={theme.primary}\n        text={'Analogue Photography'}\n        marginBottom={16}\n      />\n      <Text\n        size=\"body-1\"\n        color={theme.black}\n        text={summary}\n        marginBottom={80}\n      />\n      <img src={pgh} alt=\"Pittsburgh, Pennsylvania\" />\n      <img src={montanadoro} alt=\"Montaña D'oro, San Luis Obispo, California\" />\n      <img src={bodega} alt=\"Bodega Bay, California\" />\n      <img src={honolulu} alt=\"Honolulu, Hawaii\" />\n      <img src={halfmoon} alt=\"HalfMoon Bay, California\" />\n\n      <Footer color={theme.black} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Text } from '../../components/text/text.component';\nimport './UnderConstruction.style.scss';\nimport { theme } from '../../colors.js';\n\nconst headline = 'Under Construction!';\nconst blurb =\n  \"This content is coming soon, and I am currently hard at work writing it. If you'd like to chat specifically about a certain topic, please contact me.\";\n\nexport const UnderConstruction = () => {\n  return (\n    <div className=\"under-construction\">\n      <div className=\"under-construction-content\">\n        <Text\n          size=\"display-1\"\n          color={theme.accent}\n          text={headline}\n          marginBottom={16}\n        />\n        <Text\n          size=\"body-1\"\n          color={theme.accent}\n          text={blurb}\n          marginBottom={16}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UnderConstruction;\n","import React from 'react';\nimport { Text } from '../../components/text/text.component';\nimport './NotFound.style.scss';\nimport { theme } from '../../colors.js';\n\nconst headline = 'Page not found!';\nconst blurb =\n  'You probably hit a broken link or tried link hopping - please press the back button on your browser. ';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <div className=\"not-found-content\">\n        <Text\n          size=\"display-1\"\n          color={theme.accent}\n          text={headline}\n          marginBottom={16}\n        />\n        <Text\n          size=\"body-1\"\n          color={theme.accent}\n          text={blurb}\n          marginBottom={16}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { IProjectsProps } from './prose.model';\nimport { Text } from '../../text/text.component';\nimport { Footer } from '../../footer/footer.component';\nimport { theme } from '../../../colors.js';\nimport './prose.style.scss';\n\nexport const Prose = ({ content, date, summary, title }: IProjectsProps) => {\n  return (\n    <div className=\"prose\">\n      <div className=\"prose-block\">\n        <Text\n          size=\"display-1\"\n          color={theme.black}\n          text={title}\n          marginBottom={16}\n        />\n        <i>\n          <Text\n            size=\"body-1\"\n            color={theme.black}\n            text={date}\n            marginBottom={16}\n          />\n        </i>\n        <Text\n          size=\"body-1\"\n          color={theme.black}\n          text={summary}\n          marginBottom={8}\n        />\n      </div>\n      {content.map((c) => {\n        if (c.section && c.content) {\n          return (\n            <div className=\"prose-block\">\n              <Text\n                size=\"display-2\"\n                color={theme.black}\n                text={c.section}\n                marginBottom={16}\n              />\n              {c.content.map((contentBlock) => {\n                if (contentBlock && contentBlock.type === 'div') {\n                  return (\n                    <Text\n                      size=\"body-1\"\n                      color={theme.black}\n                      text={contentBlock}\n                      marginBottom={8}\n                    />\n                  );\n                } else if (contentBlock && contentBlock.type === 'img') {\n                  return contentBlock;\n                } else {\n                  return contentBlock;\n                }\n              })}\n            </div>\n          );\n        } else {\n          return null;\n        }\n      })}\n      <Footer color={theme.black} marginTop={80} />\n    </div>\n  );\n};\n\nexport default Prose;\n","import React from 'react';\nimport { IListProps } from './list.model';\nimport { Text } from '../../components/text/text.component';\nimport './list.style.scss';\n\nexport const List = ({ ordered = false, listItems, size }: IListProps) => {\n  const ol = (\n    <ol>\n      {listItems.map((l) => {\n        return (\n          <li>\n            <Text size={size} text={l} />\n          </li>\n        );\n      })}\n    </ol>\n  );\n\n  const ul = (\n    <ul>\n      {listItems.map((l) => {\n        return (\n          <li>\n            <Text size={size} text={l} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n\n  return <div className=\"text-list\">{ordered ? ol : ul}</div>;\n};\n\nexport default List;\n","import React from 'react';\nimport { Text } from '../../components/text/text.component';\nimport { IImageWithCaptionProps } from './ImageWithCaption.model';\nimport './ImageWithCaption.style.scss';\n\nexport const ImageWithCaption = ({\n  caption,\n  iphone = false,\n  src,\n}: IImageWithCaptionProps) => {\n  return (\n    <div className=\"image-with-caption\">\n      <img src={src} className={iphone ? 'iphone-img ' : ''} alt={caption} />\n      <Text size=\"body-2\" text={caption} />\n    </div>\n  );\n};\n\nexport default ImageWithCaption;\n","export default __webpack_public_path__ + \"static/media/OTMFastCo.86ab0b1c.png\";","export default __webpack_public_path__ + \"static/media/OTMBanner.337cc426.png\";","export default __webpack_public_path__ + \"static/media/OTMEmblem.f0d7c28a.png\";","export default __webpack_public_path__ + \"static/media/OTMFramerX.48797878.png\";","export default __webpack_public_path__ + \"static/media/OTMProtopie.4d35402f.png\";","export default __webpack_public_path__ + \"static/media/OTMRBC.a271dcd4.png\";","export default __webpack_public_path__ + \"static/media/OTMLoading.a56ef311.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport OTMFastCo from '../../assets/images/projects/OTM/OTMFastCo.png';\nimport OTMBanner from '../../assets/images/projects/OTM/OTMBanner.png';\nimport OTMEmblem from '../../assets/images/projects/OTM/OTMEmblem.png';\nimport OTMFramerX from '../../assets/images/projects/OTM/OTMFramerX.png';\nimport OTMProtopie from '../../assets/images/projects/OTM/OTMProtopie.png';\nimport OTMRBC from '../../assets/images/projects/OTM/OTMRBC.png';\nimport OTMLoading from '../../assets/images/projects/OTM/OTMLoading.png';\n\nexport const OTM = () => {\n  const OTMMarketingLink = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://blend.com/one-tap/'}\n    >\n      <Text size=\"link-1\" text=\"one of Blend's flagship products\" />\n    </a>\n  );\n  const ForumDemo = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://otm-forum-demo.netlify.app/'}\n    >\n      <Text size=\"link-1\" text=\"prototype (please view on a mobile device)\" />\n    </a>\n  );\n  const RBCDemo = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://otm-rbc-demo.netlify.app/'}\n    >\n      <Text size=\"link-1\" text=\"here (please view on a mobile device)\" />\n    </a>\n  );\n  const FramerXDemo = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://cmu-otm-demo.netlify.app/'}\n    >\n      <Text size=\"link-1\" text=\"early days of OTM\" />\n    </a>\n  );\n  const summaryText = (\n    <div>\n      <ImageWithCaption src={OTMBanner} caption=\"One-tap Mobile aka OTM\" />\n      One-tap Mobile aka OTM has been {OTMMarketingLink}, and it was an honor to\n      be put on the project as the prototyper for such a high profile project.\n      My goal was to leverage production level components to build the highest\n      fidelity proof of concept (mobile only) to not only test out new\n      experiences but also to provide the engineers a higher fidelity mock up to\n      build off of since the One Tap experience was heavy on interactions and\n      content. Over the course of the project, I built multiple iterations of\n      the project ranging from sales demos and prototypes for user studies\n      leveraging mostly ReactJS but also exploring alternative prototyping\n      tooling solutions like FramerX and ProtoPie.\n      <br />\n      <br />\n      Check out the {ForumDemo}!\n    </div>\n  );\n\n  const OTMContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'Built a dynamic and end to end hi-fidelity prototype',\n            'Explored and designed loading state experience',\n            'Ideated new interactions',\n            'Produced tailor made sales demos for clients',\n            'Produced demos for user tests',\n            'Leveraged production level react components',\n            'Architected a system to change colors and branding for sales demos',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          Blend's vision for 2019 was to drastically change how mortgages could\n          be completed: the goal was to try and net a user a preapproval letter\n          with ‘one-tap.’ The idea was that, given the right circumstances with\n          bank accounts and data all connected, a user could log in on their\n          phone when house hunting, and get a preapproval letter instantly.\n          Through Blend’s app and if the user had most of their financial\n          information and assets in one of Blend’s clients (read as clients like\n          Wells Fargo), OTM could process all the information and handle all the\n          underwriting to provide a preapproval letter.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <ImageWithCaption\n          src={OTMFastCo}\n          caption=\"OTM featured on FastCompany\"\n        />,\n        <div>\n          This was a brand new experience that Blend was setting out to test\n          out, so I was brought on the Design team as the dedicated prototyper\n          to work with design through the flows and the overall experience to\n          produce a working {ForumDemo} for user testing as well as a handoff\n          item for engineering to reference. OTM is a very intricate experience\n          since there is a huge amount of behind the scenes processes that need\n          to happen sequentially for the experience to work. The design team had\n          to figure out the whole flow (at a high level) from:\n        </div>,\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'Logging into their financial institution',\n            'Providing consent for OTM',\n            'Surfacing a potentially long loading state while OTM fetches and processes data',\n            \"Showcasing and educating a user's buying power\",\n            'Produce a preapproval letter',\n            'Provide methods for a user to edit or add information to increase their buying power or modify the preapproval letter',\n          ]}\n        ></List>,\n        <ImageWithCaption\n          src={OTMEmblem}\n          iphone\n          caption=\"OTM is a whitelabel solution\"\n        />,\n        <div>\n          One of the biggest features of OTM was how everything was done behind\n          the scenes, but that meant that there would be possibly a gap of time\n          where the user had to wait for OTM to process data and crunch numbers.\n          Thus, we had to design a loading experience that ranged from 15 to 30\n          seconds that was meaningful to the user - not just some spinner going\n          infinitely. Using Lottie, we were able to successfully deliver an\n          experience to Engineering as well as use it in our prototype in the\n          early stages of design and ideation.\n        </div>,\n        <ImageWithCaption src={OTMLoading} caption=\"Loading states for OTM\" />,\n        <div>\n          On top of having to produce a brand new experience, we needed to be\n          able to verify the experience through user testing, and we found that\n          a click through mock up wasn’t enough: in order to user test the\n          experience, the information provided to a user needed to be dynamic.\n          Furthermore, we not only wanted to see if this experience was\n          feasible, but we wanted to test for user comprehension. The OTM\n          experience was going to not only provide a preapproval letter on\n          demand, but the hope was to also educate and simplify the home buying\n          process for new home buyers as well. Instances of user testing\n          include: Authentication and Prefill explorations and Buying Power\n          comprehension.\n        </div>,\n        <div>\n          Lastly, since this was a flagship project, the Design department found\n          itself having to produce collateral/demos for sales pitches, product\n          showcases at conventions, and other marketing material. Thus, the\n          prototype was architected in a way so that the demo could be tailor\n          made to simulate a branded experience for Blend’s high profile\n          clients. You can check out one of the demos for RBC {RBCDemo}.\n        </div>,\n        <ImageWithCaption\n          src={OTMRBC}\n          iphone\n          caption=\"OTM branded for a demo for RBC\"\n        />,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <div>\n          The design and idea of OTM changed over the course of my time\n          prototyping for OTM. The designs changed as well as the copy, but\n          while those inevitable changes happened, I also changed the technology\n          I used.\n        </div>,\n        <div>\n          I started out with FramerX to produce small internal concepts for\n          Design to better explore the {FramerXDemo}. Initially, I was just\n          curious as to what FramerX was since Framer Classic (rip) was very\n          nice to use, and FramerX leveraged ReactJS. However, I found that it\n          was very hard to pass data between screens and despite being able to\n          leverage production level components, it was very cumbersome,\n          inefficient, and not dynamic.\n        </div>,\n        <ImageWithCaption\n          src={OTMFramerX}\n          iphone\n          caption=\"OTM in its early days, built with FramerX\"\n        />,\n        <div>\n          I moved on to prototyping solely in ReactJS. This was mainly out of\n          convenience for leveraging react components and thus it was easier to\n          handle data and inputs from users. Moreover, this was also requested\n          from Engineering, since they felt that it could be an easier handoff\n          since they could reference the ReactJS code when needed. I spent about\n          3 weeks of non stop coding to produce a {ForumDemo} that could mock\n          the whole experience (with loading state and dynamic inputs).\n        </div>,\n        <div>\n          Later on, I was able to spend some time refactoring the prototype\n          (while also making design iterations) so that we could easily change\n          the branding color and logo of the prototype. Making the switch to\n          prototyping in ReactJS from FramerX made it immensely easy.\n          Re-branding a FramerX file would take probably hours while updating\n          the code in ReactJS (barring the time it took to do the refactoring\n          work) would take roughly 15 minutes. The upfront cost proved to save\n          me time since I ended up making 5+ sales demos over the two months\n          after.\n        </div>,\n        <ImageWithCaption\n          src={OTMProtopie}\n          caption=\"Authentication and Prefill prototypes for user testing\"\n        />,\n        <div>\n          We then moved on to a second iteration of the OTM experience, and the\n          design team was looking into ways improve and test the log in and\n          prefill experiences for OTM. I found this a good time to try out a new\n          tool since the scope of the user testing was much much smaller\n          (compared to a whole end to end experience). Thus, I tried out\n          ProtoPie, and it was a very pleasant and fast way to make a no-code\n          hi-fi prototype. ProtoPie saved me time in creating multiple versions\n          of a log in experience (there were 4) and prefill experience (there\n          were 3). I made a total of 7 prototypes within the span of a week\n          without having to code. It did take some time since there’s a whole\n          lot of clicking, but leveraging ProtoPie for this project helped\n          inspire designers to try out the tool to create their own prototypes.\n          This served as a pilot so that we could empower product designers to\n          prototype things on their own and bring me in if they\n        </div>,\n      ],\n    },\n  ];\n  return (\n    <Projects\n      title=\"One-Tap Mobile\"\n      date=\"March 2019 - Sept 2019\"\n      summary={summaryText}\n      content={OTMContent}\n    />\n  );\n};\n\nexport default OTM;\n","export default __webpack_public_path__ + \"static/media/accordion_ids.e6b2694d.gif\";","export default __webpack_public_path__ + \"static/media/accordion_tron.c79fbecf.gif\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport accordion_ids from '../../assets/images/projects/intuit/accordion_ids.gif';\nimport accordion_tron from '../../assets/images/projects/intuit/accordion_tron.gif';\nimport { Link } from 'react-router-dom';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\n\nexport const IDSAccordion = () => {\n  const Intuit = (\n    <Link className=\"action-link\" to=\"/DocUploader\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"Intuit\" />\n    </Link>\n  );\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={accordion_tron}\n        caption=\"The Intuit Design Systems Accordion seen in Payments Onboarding with Chase in production\"\n      />\n      During my time as a software engineer at {Intuit}, I came across an\n      opportunity to contribute to an upcoming design system: Intuit Design\n      System [IDS]. This was one of my first experience in design systems: what\n      started as a spike thus evolved into a journey to contribute a new\n      component do a design system as an engineer. I had the pleasure of taking\n      a component from early design concepts, to prototyping, and finally\n      implementing a production ready accordion.\n    </div>\n  );\n\n  const IDSContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Architected and Implemented component',\n            'Provide technical and interaction feedback',\n            'Created hi-fi prototypes',\n            'Implemented Accessibility support',\n            'Integrated component into IDS review process',\n            'Consumeed & implemented accordion in product',\n            'Worked with engineers from 2 external BUs to support and extend component',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          A new UI component is introduced to Quickbooks Online: the accordion +\n          container-like features. This component would be used throughout\n          quickbooks for various onboarding flows. There are no existing\n          components from Intuit's proprietary component library, and\n          furthermore, the current component library would also be deprecated.\n          The designs presented were simply done through sketch; thus,{' '}\n          <b>\n            things like easing (animation) as well as accessbility were not\n            thought of during the intial design process\n          </b>\n          . Current onboarding flows would either be too long or broken into\n          multiple pages, thus forcing a user with a very rigid flow.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          The ultimate goal was to not only make a component that my team can\n          use, but also make a component that could be potentially used by other\n          teams. This accordion was a crucial component in a sense that it could\n          provide users flexibility when it came to filling out forms: a form\n          broken down to sections that could not only summarize each section but\n          also provide the user the freedom to preview what they need to\n          accomplish and to start wherever they desired. This accordion was made\n          so that custom header and body content could be used so that consumers\n          of this component had full control as to what they want to display to\n          the user. This is powerful so that the accordion could be dynamic:\n          different states of the accordion could show different content.\n          <br />\n          <br />\n        </div>,\n        <div>Key Features:</div>,\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Collaboration with motion designers to be consistent with Intuit’s new motion design guidelines',\n            'Customizable to different themes to match Intuit’s respective products',\n            'Working towards graduation for officially being a part of Intuit Design Systems',\n            'Upgraded project to React 16',\n            'Collaboration with Accessibility team to meet Intuit’s standards',\n            'Provide help and information externally to other teams for consumption',\n          ]}\n        ></List>,\n        <ImageWithCaption\n          src={accordion_ids}\n          caption=\"The Accordion in the Intuit Design Systems gallery\"\n        />,\n\n        <div>\n          At the end of the contribution, I was able to make something that\n          could be used throughout Intuit, as I felt that it would be ultimately\n          inefficient for another team to develop the same thing. In fact,\n          multiple teams were designing new UIs with the accordion style that my\n          team was using. This accordion currently sits as a lab component, but\n          once two teams use it and it meets proper code coverage, it will be\n          graduated into IDS officially, and it will be packaged into every\n          project automatically as currently it is available in Intuit’s npm\n          registry meaning developers have to install it manually.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Intuit Design Systems Accordion\"\n      date=\"June 2017 - Aug 2017\"\n      summary={summaryText}\n      content={IDSContent}\n    />\n  );\n};\n\nexport default IDSAccordion;\n","export default __webpack_public_path__ + \"static/media/docupload_pre.549be78a.png\";","export default __webpack_public_path__ + \"static/media/docupload.6000e235.gif\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport docupload_pre from '../../assets/images/projects/intuit/docupload_pre.png';\nimport docupload from '../../assets/images/projects/intuit/docupload.gif';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\n\nexport const DocUploader = () => {\n  const summaryText = (\n    <div>\n      <ImageWithCaption src={docupload} caption=\"DocUploader in production\" />\n      DocUploader was a feature that was created based on a huge customer pain\n      point: providing ID documentation so that the customer could be verified\n      for using Payments with Quickbooks. This project took roughly 4 weeks to\n      implement, test, and release end to end.\n    </div>\n  );\n\n  const DocUploaderContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Implement complete front end of feature',\n            'Collaborated with design, customer success, and back-end engineers to roll out feature',\n            'Spec-ed out interaction edge cases and error handling',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          As part of the onboarding process, about 10% of customers sign up need\n          to verify their identity by providing a form of Identification\n          Document (Passport, Driver License, etc). The previous process was\n          that the customer had to call customer care and fax/email their\n          documentation, which took roughly 24-48 hours to complete, depending\n          on what was needed. This is a huge pain point for the customer:\n          calling customer care is never fun, and sending over sensitive\n          information over the phone can be difficult.\n        </div>,\n        <ImageWithCaption\n          src={docupload_pre}\n          caption=\"Documentation Needed state: message displayed to user to call customer care to resolve ID verification\"\n        />,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          Docuploader was created with the intention of providing a faster way\n          for a user to verify their Identity. Considerations were made so that\n          the upload process would be straightforward: provide flexibility in\n          terms of documents that could be used for verification and provide\n          multiple ways to upload. We wanted to let the user be confident with\n          what they are submitting, thus providing a thumbnail of the uploaded\n          image, as well as a way to view it at a greater scale. The purpose of\n          DocUploader was only to provide a way to upload an image, on the UI\n          and service side, there was nothing done to verify fraudulent or bad\n          photos - this step was handled on the Payment or Risk processor's\n          side.\n        </div>,\n        <div>\n          With DocUploader, the customer was able to attach a picture and send\n          it online without having to talk to a care agent with the following\n          steps:\n        </div>,\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'As part of onboarding, user is prompted by signup to verify ID doc OR User is prompted by email sent through care agent to verify ID',\n            'User selects type of ID document they would like to upload',\n            'User drag and drops file on the drop area, or clicks browse button to upload image. Mobile users can take a picture and attach directly',\n            'UI displays thumbnail, file size, and link to enlarge image in new tab for verification.',\n            'User uploads picture and recieves confirmation that their image has been successfully uploaded.',\n            'Customer Care & Risk evaluate and verify image.',\n          ]}\n        ></List>,\n        <div>\n          With DocUploader, a process that took 24-48 hours was cut down to\n          about 10 minutes. Roughly 200+ uploads were made within the first\n          month, and that saved Intuit about at least $5,000 at $25 per care\n          call. However, the most important part was that we were able to save\n          the user’s time as well as care agents’ time.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"DocUploader\"\n      date=\"March 2017 - April 2017\"\n      summary={summaryText}\n      content={DocUploaderContent}\n    />\n  );\n};\n\nexport default DocUploader;\n","export default __webpack_public_path__ + \"static/media/SRLegacy_alpha.4d26ad95.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_landing.72d5667a.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_home.6f39f042.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_spec.02705758.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_STRAT_card.2baa59f2.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_logo_2.f5ea9876.svg\";","export default __webpack_public_path__ + \"static/media/SRLegacy_logo_4.3941c6d1.svg\";","export default __webpack_public_path__ + \"static/media/SRLegacy_logo_6.9296b488.svg\";","export default __webpack_public_path__ + \"static/media/SRLegacy_logo_final.e1ca1c3f.svg\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport { Text } from '../../components/text/text.component';\nimport SRLegacy_Alpha from '../../assets/images/projects/SRLegacy/SRLegacy_alpha.png';\nimport SRLegacy_landing from '../../assets/images/projects/SRLegacy/SRLegacy_landing.png';\nimport SRLegacy_home from '../../assets/images/projects/SRLegacy/SRLegacy_home.png';\nimport SRLegacy_spec from '../../assets/images/projects/SRLegacy/SRLegacy_spec.png';\nimport SRLegacy_STRAT_card from '../../assets/images/projects/SRLegacy/SRLegacy_STRAT_card.png';\nimport SRLegacy_logo_2 from '../../assets/images/projects/SRLegacy/SRLegacy_logo_2.svg';\nimport SRLegacy_logo_4 from '../../assets/images/projects/SRLegacy/SRLegacy_logo_4.svg';\nimport SRLegacy_logo_6 from '../../assets/images/projects/SRLegacy/SRLegacy_logo_6.svg';\nimport SRLegacy_logo_final from '../../assets/images/projects/SRLegacy/SRLegacy_logo_final.svg';\n\nexport const SRLegacy = () => {\n  const summaryText = (\n    <div>\n      StratRoulette [SR] is a project created by my good friend Justin Chen from\n      CMU. SR is essentially a form of \"spin the wheel\" that tells someone how\n      to play a game - in this case, the game is CounterStrike. I primarily work\n      on and, in a way, pioneer StratRoulette’s identity and feature\n      development, but I also take part in the front end development in React.\n    </div>\n  );\n\n  const SRLegacyContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'Lead product designer',\n            'Designed all flows and interactions of the app',\n            'Created branding identity',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          One of the obvious \"problems\" with StratRoulette was that it was\n          bootstrapped together with minimal thought on branding, layout,\n          information heirarchy, and overall aesthetics. However, the main\n          problem was that StratRoulette was in ALPHA stages, and if we wanted\n          to develop more features, we would need a foundation for design. With\n          a foundation of layout and common ui components, Justin could spend\n          more time on developing features. StratRoulette also lacked in things\n          like feature discovery and promoting user engagement. Overall\n          usability was lacking as well since StartRoulette only grew threw word\n          of mouth, but it ultimately was not intuitive to a new user.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_Alpha}\n          caption=\"StratRoulette in the early days\"\n        />,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          StratRoulette took off around 2015, and in 2017 I was asked to do a\n          redesign to not only develop an identity for the application but also\n          create and design user flows that would help foster community\n          engagement. Ultimately, we wanted to develop a design language so that\n          we could scale and build something that looked more modern. With that,\n          I was tasked to brainstorm an identity for StratRoulette, develop\n          layouts and pages for the developers with usability in mind.\n        </div>,\n        <div>\n          For every page I designed, I looked up common conventions and patterns\n          that users are accustomed to from apps like Soundcloud. We wanted to\n          encourage user enagement, so we wanted to create a home page feed to\n          show user activity, but also provide a convenient way to contribute\n          Strats. A landing page was also needed since we want to showcase what\n          StratRoulette is used for and what it can do. We incorporated user\n          accounts so that users could save their content as well as discuss and\n          vote on other content.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_landing}\n          caption=\"StratRoulette landing page, a place to showcase what StratRoulette does\"\n        />,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <div>\n          My role for SR is two fold: I am in charge of developing and\n          maintaining some sort of identity through branding and ui components\n          so that we have a framework for designing and developing features, and\n          I am responsible for designing new features and work flows for users\n          so that we can expand SR.\n        </div>,\n        <Text\n          size=\"subheader-1\"\n          text=\"Identity &amp; Components\"\n          marginTop={16}\n          marginBottom={16}\n        />,\n        <div>\n          When it came to designing StratRoulette, I wanted to make sure that we\n          were consistent with overall styling of the application. My first\n          order of business was mainly just to create a small foundation of UI\n          components: font, colors, input, grid, and more. Once that foundation\n          was layed out, StratRoulette had some sort of identity, thus we could\n          move on with creating layouts and certain user flows like landing\n          page, submitting a start, etc.\n        </div>,\n        <div>\n          I really wanted to make sure the whole website was made so that it\n          could be catered towards different types of games, as we were thinking\n          of expanding from CS:GO. I ultimately was just tired of seeing really\n          bright or neon and crazy looking text on websites to fit the brand of\n          the game, and since SR is not really tied to a game, I figured I could\n          just start from scratch and keep it minimal. I first just started out\n          by picking some colors, really just anything I felt, and at that time\n          I felt like electric blue and a dark black/grey would be pretty\n          fitting as accent colors. All the icons made in SR were also created\n          by me with a little bit of illustrator magic.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_spec}\n          caption=\"StratRoulette initial component spec sheet\"\n        />,\n        <Text\n          size=\"subheader-1\"\n          text=\"Logo designs\"\n          marginTop={16}\n          marginBottom={16}\n        />,\n        <div>\n          The first order of business for StratRoulette was for me to create a\n          logo. The biggest motivation for me was to not make it look to\n          “gamer,” and also not too boring. What I shortly realized was that\n          making some sort of logo or monogram with the letters “S” and “R” were\n          quit tricky.\n        </div>,\n        <div>\n          The first iterations were based on a hexagonal shape, similar to a\n          revolver barrel. I wanted to really emphasize the roulette part, and I\n          thought it would be interesting with the idea “russian roulette.”\n          However, it was hard for me to execute and figure out where the S\n          would ultimately be.\n        </div>,\n        <img\n          className=\"SR-logo\"\n          src={SRLegacy_logo_2}\n          alt={'sr logo attempt 1'}\n        />,\n        <div>\n          Then, I tried more of a symmetric approach, as I tried to make the S\n          and the R shapes look more similar, but it just seemed to take too\n          much space\n        </div>,\n        <img\n          className=\"SR-logo\"\n          src={SRLegacy_logo_4}\n          alt={'sr logo attepmt 2'}\n        />,\n        <div>\n          Next was some sort of lightning bolt to convey the fast paced nature\n          of SR, and the R was placed as more of an exponent and not the main\n          focus.\n        </div>,\n        <img\n          className=\"SR-logo\"\n          src={SRLegacy_logo_6}\n          alt={'sr logo attempt 3'}\n        />,\n        <div>\n          However, the last iteration was something completely unorthodox. I was\n          really inspired by something like Parley’s icons with some sort of\n          circle border, and I just toyed around with switching the emphasis of\n          the letters. Ultimately, I came to this by just trying it out, but I\n          seemed to like it more: the letter “R” seemed to fit better with a\n          Circle, as it wasn’t clashing with either sharp edges or curved edges\n          of the bends. This logo is used for the main page, as well as the\n          favicon. Note that the favicon does not have the “StratRoulette” text\n          in the circle, as it is too small to be read or seen.\n        </div>,\n        <img\n          className=\"SR-logo\"\n          src={SRLegacy_logo_final}\n          alt={'sr logo final'}\n        />,\n\n        <Text\n          size=\"subheader-1\"\n          text=\"Product designs\"\n          marginTop={16}\n          marginBottom={16}\n        />,\n        <div>\n          The most important part was to showcase the Strat card because it was\n          the one thing that users directly interacted with. We wanted to show\n          what new things we added: color coding towards games, a save and share\n          button, tags, etc, and furthermore this would be a component that\n          shows up everywhere. We wanted to provide a way for people to\n          contribute strats, search/filter for strats, roll strats (when they\n          play the game), and comment on strats.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_STRAT_card}\n          caption=\"The strat card showcasing tags, votes, share button, and improved information hierarchy.\"\n        />,\n        <div>\n          A big problem with StratRoulette's original strat card was that there\n          was no separation of information: there was a string of text for a\n          strat and the name of the user who submitted it. Furthermore, the\n          information blended into the webpage, there was no way for a user to\n          really understand that a strat was present upon the first roll or page\n          load. Thus, the idea of a strat card came into play: we wanted to\n          effectively provide information to the user. Since strats are viewed\n          quickly during games, it is important to have proper information\n          hierarchy: valuable time is lost to the user if they have to look\n          carefully, and sometimes users do not have the patience to look around\n          for information.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_Alpha}\n          caption=\"StratRoulette's early version of a start: you could not distinguish what information was important or not.\"\n        />,\n        <div>\n          The Home page is quite similar to something you would typically see in\n          most social media feeds. The idea was that we wanted to show the\n          activity feeds of people that a user follow and show what Strats are\n          being favorited or created. Essentially this page is where people\n          share strat cards, playbooks (collections of strats), and more. I was\n          ultimately inspired by how SoundCloud takes the “social media”\n          approach of sharing music, where people post songs or repost songs,\n          instead of acting like a typical music library. The same goes for SR,\n          we wanted it to act not only as a repository of strats that people\n          contribute, but we want to be able to showcase them and share them\n          easily.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_home}\n          caption=\"StratRoulette's homepage feed showcasing trending strats and easy access for the user to contributing content.\"\n        />,\n      ],\n    },\n  ];\n  return (\n    <Projects\n      title=\"StratRoulette [v0.1 | ARCHIVE]\"\n      date=\"Aug 2017 - Dec 2017\"\n      summary={summaryText}\n      content={SRLegacyContent}\n    />\n  );\n};\n\nexport default SRLegacy;\n","export default __webpack_public_path__ + \"static/media/WaitTask.56a5ed7b.png\";","export default __webpack_public_path__ + \"static/media/WaitTaskScreens.8a53467d.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport WaitTask from '../../assets/images/projects/WaitTask/WaitTask.png';\nimport WaitTaskScreens from '../../assets/images/projects/WaitTask/WaitTaskScreens.png';\n\nexport const WaitTaskV2 = () => {\n  const prototype = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://wait-task-v2.netlify.app/'}\n    >\n      <Text size=\"link-1\" text=\"prototype\" />\n    </a>\n  );\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={WaitTask}\n        caption=\"Wait Task V2 is a dynamic yet informative loading experience for home insurance customers\"\n      />\n      Wait Task V2 is a project where prototyping was leveraged to flesh out a\n      loading experience through code. A hi-fi prototype was made in a matter of\n      days to help the Design team figure out transitions, content, and\n      technical constraints. The prototype was coded in ReactJS and served as a\n      not only a working sandbox for designers to see the experience in real\n      time but also a handoff item for engineering and thus saving several weeks\n      of development time.\n      <br />\n      <br />\n      Check out the {prototype}!\n    </div>\n  );\n\n  const WaitTaskContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Created a hi-fi prototype with ReactJS',\n            'Collaborated with Design to work through step by step transitions',\n            'Collaborated with Engineering for hand off and walked through code',\n            'Aided Engineering in making code production ready',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          The original Wait Task experience was simply a spinner with some text\n          that lasted somewhere around 30 seconds, and the home insurance team\n          wanted to make the experience more dynamic and informative for the\n          user.\n        </div>,\n        <ImageWithCaption\n          src={WaitTaskScreens}\n          caption=\"The three stages of the Wait Task experience\"\n        />,\n        <div>\n          I was presented a few screens in Figma, and there were three ‘stages’\n          of the wait task. However, many of the transitions were not figured\n          out and there seemed to be a lot of moving pieces between each\n          ‘stage.’ Thus, we figured it would be small enough scope but yet\n          worthwhile to invest time to coding a hi-fi prototype in order to work\n          through all the transitions and intricate interactions.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          As mentioned, the prototype that I was able to produce with the Design\n          team served as a deliverable for hand off for the engineering team.\n          The prototype came to be a useful addition to the design mocks since\n          the engineers could see exactly what was happening frame by frame, but\n          most importantly, the engineers could also reference my code.\n          <br />\n          <br />\n          Check out the {prototype}!\n        </div>,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <div>\n          This project happened over the course of a few days, but my process\n          was quite simple: with most prototypes I make. The first step was to\n          look at the mocks and ask questions and figure out what goes where.\n          Since I knew this was a loading experience that was supposed to be\n          dynamic based on service requests returning data, I mainly used\n          setTimeouts to mock all the timings for the prototype.\n        </div>,\n        <div>\n          Moreover, I found it extremely helpful to draw everything out frame by\n          frame in figma to highlight every ‘delta’ between each transition\n          between the stages. This helped serve as a blueprint for the prototype\n          so that I could figure out every single element that I needed to show\n          or hide. It was also helpful to just workshop the frames with the\n          primary designer on the project and provide insight as to what could\n          be done or what would be out of scope.\n        </div>,\n        <div>\n          Considerations were made to use other prototyping tools at the time,\n          and even Adobe AE was considered. However, we felt that it would be\n          easier for handoff if we had a code solution. Additionally, it served\n          to be easier to update and tweak timings on the code side as opposed\n          to Adobe AE. Overall, we felt that it would be too cumbersome to\n          animate every single item manually in Adobe AE, and code helped\n          streamline this with the use of CSS and javascript to programmatically\n          animate or transition elements.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Home Insurance Wait Task V2\"\n      date=\"October 2019\"\n      summary={summaryText}\n      content={WaitTaskContent}\n    />\n  );\n};\n\nexport default WaitTaskV2;\n","import React from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Main } from './pages/Main/Main';\nimport { Photography } from './pages/Photography/Photography';\nimport UnderConstruction from './pages/UnderConstruction/UnderConstruction.component';\nimport NotFound from './pages/NotFound/NotFound.component';\nimport OTM from './pages/Projects/OTM';\nimport IDSAccordion from './pages/Projects/IDSAccordion';\nimport DocUploader from './pages/Projects/DocUploader';\nimport SRLegacy from './pages/Projects/SRLegacy';\nimport WaitTAskV2 from './pages/Projects/WaitTaskV2';\n// import DesignSystemsAtBlend from './pages/Blog/designSystemsAtBlend';\n\nexport const App = () => {\n  return (\n    <div>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/photography\" component={Photography} />\n          <Route path=\"/underconstruction\" component={UnderConstruction} />\n          <Route path=\"/OTM\" component={OTM} />\n          <Route path=\"/IDSAccordion\" component={IDSAccordion} />\n          <Route path=\"/DocUploader\" component={DocUploader} />\n          <Route path=\"/SRLegacy\" component={SRLegacy} />\n          <Route path=\"/404\" component={NotFound} />\n          <Route path=\"/WaitTaskV2\" component={WaitTAskV2} />\n          <Redirect from=\"*\" to=\"/404\" />\n          {/* <Route path=\"/dsystemsAtBlend\" component={DesignSystemsAtBlend} /> */}\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}