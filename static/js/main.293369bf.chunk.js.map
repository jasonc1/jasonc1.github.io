{"version":3,"sources":["components/text/text.component.tsx","colors.js","components/nav/nav.component.tsx","components/rule/rule.component.tsx","components/footer/footer.component.tsx","components/subject/subject.component.tsx","components/subject-links/subject-links.component.tsx","components/sections/design-systems.component.tsx","components/sections/prototyping.component.tsx","components/sections/toolsAndOps.component.tsx","components/sections/photography.component.tsx","components/sections/editorialAndLookbook.component.tsx","assets/misc/jason_chen_resume.pdf","components/sections/contact.component.tsx","pages/Main/Main.tsx","assets/images/pgh.jpg","assets/images/montanadoro.jpg","assets/images/bodega.jpg","assets/images/honolulu.jpg","assets/images/halfmoon.jpg","pages/Photography/Photography.tsx","pages/UnderConstruction/UnderConstruction.component.tsx","pages/NotFound/NotFound.component.tsx","components/templates/prose/prose.component.tsx","components/list/list.component.tsx","components/ImageWithCaption/ImageWithCaption.component.tsx","assets/images/projects/OTM/OTMBanner.png","assets/images/projects/OTM/OTMEmblem.png","assets/images/projects/OTM/OTMFramerX.png","assets/images/projects/OTM/OTMProtopie.png","assets/images/projects/OTM/OTMRBC.png","assets/images/projects/OTM/OTMLoading.png","pages/Projects/OTM.tsx","assets/images/projects/intuit/accordion_ids.gif","assets/images/projects/intuit/accordion_tron.gif","pages/Projects/IDSAccordion.tsx","assets/images/projects/intuit/docupload_pre.png","assets/images/projects/intuit/docupload.gif","pages/Projects/old/DocUploader.tsx","assets/images/projects/SRLegacy/SRLegacy_alpha.png","assets/images/projects/SRLegacy/SRLegacy_landing.png","assets/images/projects/SRLegacy/SRLegacy_home.png","assets/images/projects/SRLegacy/SRLegacy_spec.png","assets/images/projects/SRLegacy/SRLegacy_STRAT_card.png","assets/images/projects/SRLegacy/SRLegacy_logo_2.svg","assets/images/projects/SRLegacy/SRLegacy_logo_4.svg","assets/images/projects/SRLegacy/SRLegacy_logo_6.svg","assets/images/projects/SRLegacy/SRLegacy_logo_final.svg","pages/Projects/old/SRLegacy.tsx","assets/images/projects/WaitTask/WaitTask.png","assets/images/projects/WaitTask/WaitTaskScreens.png","pages/Projects/WaitTaskV2.tsx","assets/images/projects/AbstractMigrate/AbstractMigrateDefine.png","assets/images/projects/AbstractMigrate/AbstractMigrateTimeline.png","pages/Projects/AbstractMigrate.tsx","assets/images/projects/Sapling/sapling_example.png","assets/images/projects/Sapling/sapling.png","pages/Projects/Sapling.tsx","assets/images/projects/Haven/haven_cover.png","assets/images/projects/Haven/haven.png","pages/Projects/Haven.tsx","assets/misc/figma_autolayout_2020.pdf","assets/misc/figma_variants.pdf","assets/misc/Design_systems_process.pdf","assets/images/projects/misc/BDS.png","assets/images/projects/misc/consumer_storybook.png","assets/images/projects/misc/design_systems_process.png","pages/Blog/DesignSystemsAtBlend.tsx","assets/images/projects/misc/intake_form.png","assets/images/projects/misc/prototypingWithFidelityInMind.png","assets/misc/Prototyping_with_functional_fidelity_in_mind.pdf","pages/Blog/PrototypingAtBlend.tsx","assets/images/projects/StratRoulette/SR_cover.png","assets/images/projects/StratRoulette/roll_strat.png","assets/images/projects/StratRoulette/roll_strat_mobile.png","assets/images/projects/StratRoulette/colors.png","assets/images/projects/StratRoulette/landing_info.png","assets/images/projects/StratRoulette/roulette_form_inputs.png","assets/images/projects/StratRoulette/typography.png","pages/Projects/old/StratRoulette.tsx","assets/images/projects/Alchemy/Alchemy_cover.png","assets/images/projects/Alchemy/Alchemy_foundations.png","assets/images/projects/Alchemy/Alchemy_theming.png","assets/images/projects/Alchemy/Alchemy_checkbox.png","assets/images/projects/Alchemy/Alchemy_reference_site_color.svg","assets/images/projects/Alchemy/Alchemy_reference_site_component.svg","assets/images/projects/Alchemy/Alchemy_theme_object.png","pages/Projects/Alchemy.tsx","assets/images/projects/ExerciseStatus/ExerciseStatus1.png","assets/images/projects/ExerciseStatus/ExerciseStatus2.png","pages/Projects/ExerciseStatus.tsx","assets/images/projects/EmployeeOnboarding/Welcome.png","assets/images/projects/EmployeeOnboarding/TwoFactor.png","assets/images/projects/EmployeeOnboarding/PersonalInfo.png","pages/Projects/EmployeeOnboarding.tsx","assets/images/projects/Vesta/base_textinput.png","assets/images/projects/Vesta/figma_variant_changes.png","assets/images/projects/Vesta/Modal_Audit.png","assets/images/projects/Vesta/modal_scoping.png","assets/images/projects/Vesta/TextInputs.png","assets/images/projects/Vesta/vesta_icons.png","assets/images/projects/Vesta/Modal.png","assets/images/projects/Vesta/modal_workaround.png","assets/images/projects/Vesta/Cover.png","assets/images/projects/Vesta/Subcomponents.png","pages/Projects/Vesta.tsx","assets/images/projects/Ink/emp_storybook.jpg","assets/images/projects/Ink/emp_storybook2.jpg","assets/images/projects/Ink/figma_button.jpg","assets/images/projects/Ink/figma_doc.jpg","assets/images/projects/Ink/figma_doc2.jpg","assets/images/projects/Ink/figma_icons.png","assets/images/projects/Ink/emp_storybook1.png","assets/images/projects/Ink/employee_figma.png","assets/images/projects/Ink/figma_button_spec.png","assets/images/projects/Ink/figma_doc1.png","assets/images/projects/Ink/shimmer_doc.png","assets/images/projects/Ink/shimmer_doc1.png","assets/images/projects/Ink/ink_cover.png","assets/images/projects/Ink/icon_doc.png","pages/Projects/Ink.tsx","assets/images/projects/ProductIllustrations/product_illustrations_blend_site.png","assets/images/projects/ProductIllustrations/product_illustrations_components.png","assets/images/projects/ProductIllustrations/product_illustrations_lottie.png","assets/images/projects/ProductIllustrations/product_illustrations_sample.png","assets/images/projects/ProductIllustrations/product_illustrations_type.png","pages/Projects/old/ProductIllustrations.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Text","textAlign","color","size","text","textStyles","marginTop","marginRight","marginBottom","marginLeft","textClass","classNames","className","style","theme","primary","accent","black","white","Nav","useEffect","handleScroll","navRate","window","scrollY","nav","document","getElementById","width","addEventListener","removeEventListener","id","onClick","scrollIntoView","behavior","Rule","Footer","Subject","title","description","children","subjectStyles","SubjectLinks","projects","map","project","link","external","target","rel","href","name","to","AlchemyLink","Vesta","Ink","designSystemsDescription","DesignSystems","oneTapLink","prototypingDescription","Prototyping","saplingLink","toolsAndOpsDescription","ToolsAndOps","InstagramLink","photographyDescription","Photography","RoninDivisionLink","editorialAndLookbookDescription","EditorialAndLookbook","contactDescription","Contact","Resume","Main","src","pgh","alt","montanadoro","bodega","honolulu","halfmoon","UnderConstruction","NotFound","Prose","content","date","summary","c","section","contentBlock","type","List","ordered","listItems","ol","l","ul","ImageWithCaption","caption","iphone","imgClass","OTM","OTMMarketingLink","ForumDemo","summaryText","OTMBanner","OTMContent","OTMFramerX","OTMEmblem","OTMRBC","OTMLoading","OTMProtopie","IDSAccordion","Intuit","accordion_tron","IDSContent","accordion_ids","DocUploader","docupload","DocUploaderContent","docupload_pre","SRLegacy","SRLegacyContent","SRLegacy_Alpha","SRLegacy_landing","SRLegacy_spec","SRLegacy_logo_2","SRLegacy_logo_4","SRLegacy_logo_6","SRLegacy_logo_final","SRLegacy_STRAT_card","SRLegacy_home","WaitTaskV2","prototype","WaitTask","WaitTaskContent","WaitTaskScreens","AbstractMigrate","AbstractAPI","AbstractMigrateContent","AbstractMigrateDefine","AbstractMigrateTimeline","Sapling","sapling","SaplingContent","sapling_example","Haven","haven","HavenContent","haven_cover","DesignSystemsAtBlend","FigmaAutolayout","FigmaAutolayoutPDF","FigmaVariants","FigmaVariantsPDF","dsystemProcess","DesignSystemProcessPDF","prototypingAtBlend","Alchemy","Content","consumer_storybook","BDS","design_systems_process","PrototypingAtBlend","bankerProto","prototypingPDF","prototypingWithFidelityInMindPDF","OTMProtopieLink","intake_form","prototypingWithFidelityInMind","StratRoulette","Voyage","SR_cover","StratRouletteContent","SRLegacy_alpha","colors","typography","roulette_form_inputs","landing_info","roll_strat","roll_strat_mobile","Alchemy_cover","AlchemyContent","Alchemy_foundations","Alchemy_theme_object","Alchemy_theming","Alchemy_checkbox","Alchemy_reference_site_color","Alchemy_reference_site_component","ExerciseStatusProto","ExerciseStatus","ExerciseStatus1","ExerciseStatusContent","ExerciseStatus2","EmployeeOnboardingProto","EmployeeOnboarding","Welcome","TwoFactor","PersonalInfo","Cover","VestaContent","vesta_icons","figma_variant_changes","base_textinput","TextInputs","Modal_Audit","modal_scoping","ModalSubcomponents","Modal","modal_workaround","ink_cover","InkContent","figma_button","figma_button_spec","figma_icons","icon_doc","figma_doc","figma_doc1","figma_doc2","shimmer_doc","shimmer_doc1","emp_storybook","emp_storybook1","emp_storybook2","employee_figma","ProductIllustrations","product_illustrations_blend_site","ProductIllustrationsContent","product_illustrations_sample","product_illustrations_components","product_illustrations_type","product_illustrations_lottie","App","exact","path","component","WaitTAskV2","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.293369bf.chunk.js","sourcesContent":["import React from 'react';\nimport { ITextProps, ITextStyles } from './text.model';\nimport './text.style.scss';\nimport classNames from 'classnames';\n\nexport const Text = ({\n  textAlign = 'left',\n  color = 'inherit',\n  size,\n  text,\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n}: ITextProps) => {\n  const textStyles: ITextStyles = {\n    textAlign,\n    color,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n  };\n\n  const textClass = classNames('text', {\n    'display-1': size === 'display-1',\n    'display-2': size === 'display-2',\n    'header-1': size === 'header-1',\n    'subheader-1': size === 'subheader-1',\n    'body-1': size === 'body-1',\n    'body-2': size === 'body-2',\n    'link-1': size === 'link-1',\n    'link-2': size === 'link-2',\n  });\n\n  return (\n    <div className={textClass} style={textStyles}>\n      {text}\n    </div>\n  );\n};\n","export const theme = {\n  primary: '#11593f',\n  accent: '#feda7b',\n  black: '#000',\n  white: '#fff',\n};\n\nexport default theme;\n","import React, { useEffect } from 'react';\nimport { Text } from '../../components/text/text.component';\nimport './nav.style.scss';\nimport { theme } from '../../colors.js';\n\nexport const Nav = () => {\n  useEffect(() => {\n    const handleScroll = () => {\n      const navRate = window.scrollY / 20;\n      const nav = document.getElementById('nav-selector');\n      if (nav) {\n        if (window.scrollY < 500) {\n          nav.style.width = 50 - navRate + '%';\n        } else {\n          nav.style.width = '25%';\n        }\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  });\n\n  const clickProjects = () => {\n    document\n      .getElementById('scroll-projects')\n      ?.scrollIntoView({ behavior: 'smooth' });\n  };\n  const clickAbout = () => {\n    document\n      .getElementById('scroll-about')\n      ?.scrollIntoView({ behavior: 'smooth' });\n  };\n  const clickPhotography = () => {\n    document\n      .getElementById('scroll-photography')\n      ?.scrollIntoView({ behavior: 'smooth' });\n  };\n  const clickContact = () => {\n    document\n      .getElementById('scroll-contact')\n      ?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"nav\" id=\"nav-selector\">\n      <div className=\"nav-content\">\n        <Text size=\"display-1\" color={theme.primary} text=\"Jason Chen\" />\n\n        <ul className=\"nav-menu\">\n          <li id=\"about\" onClick={clickAbout}>\n            <Text size=\"subheader-1\" color={theme.primary} text=\"About\" />\n          </li>\n          <li id=\"projects\" onClick={clickProjects}>\n            <Text size=\"subheader-1\" color={theme.primary} text=\"Projects\" />\n          </li>\n          <li id=\"photography\" onClick={clickPhotography}>\n            <Text size=\"subheader-1\" color={theme.primary} text=\"Photography\" />\n          </li>\n          <li id=\"resume\" onClick={clickContact}>\n            <Text size=\"subheader-1\" color={theme.primary} text=\"Contact\" />\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './rule.style.scss';\n\nexport const Rule = () => {\n  return <div className=\"rule\" />;\n};\n","import React from 'react';\nimport { IFooterProps, IFooterStyles } from './footer.model';\nimport './footer.style.scss';\nimport { Text } from '../text/text.component';\n\nexport const Footer = ({\n  color = 'inherit',\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n}: IFooterProps) => {\n  const textStyles: IFooterStyles = {\n    color,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n  };\n\n  return (\n    <footer style={textStyles}>\n      <Text\n        size=\"body-2\"\n        color={color}\n        text=\"Created in React &amp; designed with Figma\"\n        marginBottom={0}\n      />\n\n      <Text\n        size=\"body-2\"\n        color={color}\n        text=\"&copy; JASON CHEN 2020\"\n        marginBottom={0}\n      />\n    </footer>\n  );\n};\n","import React from 'react';\nimport { ISubjectProps, ISubjectStyles } from './subject.model';\nimport './subject.style.scss';\nimport { Text } from '../text/text.component';\nimport { theme } from '../../colors.js';\n\nexport const Subject = ({\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n  title,\n  description,\n  children,\n}: ISubjectProps) => {\n  const subjectStyles: ISubjectStyles = {\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n  };\n\n  return (\n    <div className=\"subject\" style={subjectStyles}>\n      <Text\n        size=\"display-1\"\n        text={title}\n        color={theme.accent}\n        marginBottom={32}\n      />\n      <Text\n        size=\"body-1\"\n        text={description}\n        color={theme.white}\n        marginBottom={8}\n      />\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { ISubjectLinksProps } from './subject-links.model';\nimport './subject-links.style.scss';\nimport { Text } from '../text/text.component';\nimport { theme } from '../../colors.js';\nimport { Link } from 'react-router-dom';\n\nexport const SubjectLinks = ({ projects }: ISubjectLinksProps) => {\n  return (\n    <div className=\"subject-links\">\n      {projects.map((project) => {\n        if (project.link) {\n          if (project.external) {\n            return (\n              <div className=\"project-link\">\n                <a target=\"_blank\" rel=\"noreferrer\" href={project.link}>\n                  <Text\n                    size=\"link-1\"\n                    color={theme.accent}\n                    text={project.name}\n                  />\n                </a>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"project-link\">\n                <Link to={project.link as string} target=\"_blank\">\n                  <Text\n                    size=\"link-1\"\n                    color={theme.accent}\n                    text={project.name}\n                  />\n                </Link>\n              </div>\n            );\n          }\n        } else {\n          return (\n            <Text size=\"link-1\" color={theme.accent} text={project.name} />\n          );\n        }\n      })}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { Link } from 'react-router-dom';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\n// TODO add proper links to project pages\n\nconst AlchemyLink = (\n  <Link className=\"action-link\" to=\"/underconstruction\" target=\"_blank\">\n    <Text size=\"link-1\" text=\"Alchemy Design system\" />\n  </Link>\n);\n\nconst Vesta = (\n  <Link className=\"action-link\" to=\"/Vesta\" target=\"_blank\">\n    <Text size=\"link-1\" text=\"Vesta\" />\n  </Link>\n);\n\nconst Ink = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://ink.carta.com/'}\n  >\n    <Text size=\"link-1\" text=\"Ink design system\" />\n  </a>\n);\n\nconst designSystemsDescription: JSX.Element = (\n  <div>\n    Design systems is currently my passion. In one way or another, I got my\n    first taste of design systems while I was at Intuit, where I owned and\n    contributed to an accordion component. Then, I moved to Blend, where I was a\n    founding member of {AlchemyLink}, a themeable design system to support\n    Blend’s various products. Before working on Alchemy, I helped create and\n    maintain Figma libraries, write documentation, address design debt, and host\n    UI reviews for our fellow product designers. Afterwards, I joined Carta to\n    continue my work around {Ink} where I lead the \"Ink on Figma\" effort,\n    contributed to Ink's codebase, and prototyped designs for the \"Employee\"\n    (aka \"Shareholder\") pillar. I have also worked as a contractor for {Vesta},\n    where I built out the whole design system from the ground up.\n  </div>\n);\n\n// TODO add proper links to external pages ie stratroulette.com\nexport const DesignSystems = () => {\n  return (\n    <Subject title=\"Design Systems\" description={designSystemsDescription}>\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Alchemy Design System',\n            link: 'Alchemy',\n            external: false,\n          },\n          {\n            name: 'Ink Design System',\n            link: 'Ink',\n            external: false,\n          },\n          {\n            name: 'Vesta ui-kit',\n            link: 'Vesta',\n            external: false,\n          },\n          {\n            name: 'Intuit Design Systems Accordion',\n            link: 'IDSAccordion',\n            external: false,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default DesignSystems;\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\n// const prototypingAtBlendLink = (\n//   <Link className=\"action-link\" to=\"/PrototypingAtBlend\" target=\"_blank\">\n//     <Text size=\"link-1\" text=\"here\" />\n//   </Link>\n// );\n\nconst oneTapLink = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://blend.com/one-tap/'}\n  >\n    <Text size=\"link-1\" text=\"One Tap Mobile\" />\n  </a>\n);\n\nconst prototypingDescription: JSX.Element = (\n  <div>\n    At Blend, I was fortunate enough to create a whole process around\n    prototyping and make it a reality for Engineering, Product, and Design. A\n    notable project would be {oneTapLink}, as I’ve been able to leverage the\n    prototype for user studies, sales demos, and exploratory concepts to help\n    product designers design faster. At Carta, I built roughly 1-2 prototypes\n    each quarter for user testing as well as proof of concept testing, where I\n    collaborated with designers to elevate their designs through providing\n    feedback around ui/components, edge cases, and more.\n  </div>\n);\n\nexport const Prototyping = () => {\n  return (\n    <Subject title=\"Prototyping\" description={prototypingDescription}>\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Blend One Tap Mobile',\n            link: 'OTM',\n            external: false,\n          },\n          {\n            name: 'Blend Insurance Wait Task V2',\n            link: 'WaitTaskV2',\n            external: false,\n          },\n          {\n            name: 'Carta Exercise Status',\n            link: 'ExerciseStatus',\n            external: false,\n          },\n          {\n            name: 'Carta Employee Onboarding',\n            link: 'EmployeeOnboarding',\n            external: false,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default Prototyping;\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { Link } from 'react-router-dom';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\nconst saplingLink = (\n  <Link className=\"action-link\" to=\"/underconstruction\" target=\"_blank\">\n    <Text size=\"link-1\" text=\"Sapling\" />\n  </Link>\n);\n\nconst toolsAndOpsDescription: JSX.Element = (\n  <div>\n    At Blend, I’ve also been fortunate enough to help with design ops and create\n    tooling to help product designers do their best work. To do this, I’ve found\n    that I’ve been able to use my programming knowledge to create small programs\n    or Figma plugins. {saplingLink}, for example, helps product designers\n    organize their pages within figma so their cross functional partners can\n    better reference screens to foster easier collaboration. Furthermore, I’ve\n    been able to help educate and consult with product designers for any\n    component help they need via UI reviews at Blend.\n  </div>\n);\n\nexport const ToolsAndOps = () => {\n  return (\n    <Subject\n      title=\"Web Tools &amp; Design Ops\"\n      description={toolsAndOpsDescription}\n    >\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Sapling',\n            link: 'Sapling',\n            external: false,\n          },\n          {\n            name: 'Abstract Migrate Tool',\n            link: 'AbstractMigrate',\n            external: false,\n          },\n          {\n            name: 'Haven',\n            link: 'Haven',\n            external: false,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default ToolsAndOps;\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\nconst InstagramLink = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://www.instagram.com/me.dium'}\n  >\n    <Text size=\"link-1\" text=\"Instagram\" />\n  </a>\n);\n\nconst photographyDescription: JSX.Element = (\n  <div>\n    I’ve been shooting photography for a few years now - let’s say 8 years to\n    keep it simple. I’ve done everything from sports photography at CMU to event\n    photography and much more. As of the last few years, I started shooting\n    analogue (film) phtography as I can really focus in on composing a shot and\n    spend less time editing on the computer and more time outside taking\n    landscape photographs. You can also find me on {InstagramLink} to see my\n    latest film scans.\n  </div>\n);\n\nexport const Photography = () => {\n  return (\n    <Subject title=\"Photography\" description={photographyDescription}>\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Personal work',\n            link: 'photography',\n            external: false,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default Photography;\n","import React from 'react';\nimport { Text } from '../text/text.component';\nimport { Subject } from '../subject/subject.component';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\n\nconst RoninDivisionLink = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://www.ronindivision.com/'}\n  >\n    <Text size=\"link-1\" text=\"Ronin Division\" />\n  </a>\n);\n\nconst editorialAndLookbookDescription: JSX.Element = (\n  <div>\n    If I’m not out on the streets or in nature lugging my tripod around, I\n    occaisionally collaborate with my friend Brendan to work on photographing\n    lookbooks and editorials for a streetwear brand called {RoninDivisionLink}.\n    As someone that collects sneakers and enjoys streetwear, it’s always nice to\n    participate and give back to the streetwear community.\n  </div>\n);\n\nexport const EditorialAndLookbook = () => {\n  return (\n    <Subject\n      title=\"Editorial &amp; Lookbook\"\n      description={editorialAndLookbookDescription}\n    >\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Ronin Division FW20',\n            link: 'https://www.ronindivision.com/pages/fall2020-lookbook',\n            external: true,\n          },\n          {\n            name: 'Ronin Division Face Mask (COVID-19)',\n            link:\n              'https://www.instagram.com/p/CC_gBc7pbT2/?utm_source=ig_web_copy_link',\n            external: true,\n          },\n          {\n            name: 'Ronin Division FW18',\n            link: 'https://www.ronindivision.com/pages/fw18-lookbook',\n            external: true,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default EditorialAndLookbook;\n","export default __webpack_public_path__ + \"static/media/jason_chen_resume.bce3de37.pdf\";","import React from 'react';\nimport { Subject } from '../subject/subject.component';\nimport { SubjectLinks } from '../subject-links/subject-links.component';\nimport Resume from '../../assets/misc/jason_chen_resume.pdf';\n\nconst contactDescription: JSX.Element = (\n  <div>\n    Want to learn more about my journey? Feel free to reach out! I’m always open\n    to talking to others about my role or even helping others figure out if\n    design technology is something they want to do. Maybe you just want to talk\n    about photography or sneakers - I’m always down for a chat over zoom or\n    coffee.\n  </div>\n);\n\nexport const Contact = () => {\n  return (\n    <Subject title=\"Contact\" description={contactDescription}>\n      <SubjectLinks\n        projects={[\n          {\n            name: 'Email',\n            link: 'mailto:jasonc1@alumni.cmu.edu',\n            external: true,\n          },\n          {\n            name: 'LinkedIn',\n            link: 'https://www.linkedin.com/in/jchen10/',\n            external: true,\n          },\n          {\n            name: 'Resume',\n            link: Resume,\n            external: true,\n          },\n          {\n            name: 'Github',\n            link: 'https://github.com/jasonc1',\n            external: true,\n          },\n        ]}\n      />\n    </Subject>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport { Text } from '../../components/text/text.component';\nimport './main.style.scss';\nimport { theme } from '../../colors.js';\nimport { Nav } from '../../components/nav/nav.component';\nimport { Rule } from '../../components/rule/rule.component';\nimport { Footer } from '../../components/footer/footer.component';\nimport DesignSystems from '../../components/sections/design-systems.component';\nimport Prototyping from '../../components/sections/prototyping.component';\nimport ToolsAndOps from '../../components/sections/toolsAndOps.component';\nimport Photography from '../../components/sections/photography.component';\nimport EditorialAndLookbook from '../../components/sections/editorialAndLookbook.component';\nimport Contact from '../../components/sections/contact.component';\n\nexport const Main = () => {\n  return (\n    <div className=\"main\" id=\"main-selector\">\n      <Nav />\n      <div className=\"about main-container\" id=\"scroll-about\">\n        <div className=\"about-content\">\n          <Text\n            size=\"display-1\"\n            color={theme.accent}\n            text=\"I’m a design technologist, and I love design systems, mechanical keyboards, and analogue photography.\"\n            marginBottom={32}\n          />\n          <Text\n            size=\"body-1\"\n            color={theme.accent}\n            text=\"Hi, I’m Jason. I used to be a developer, but now I sit at the intersection of design and code. My passion is building and maintaining design systems at the moment, and on the side I create tools for design ops, create high fidelity prototypes, contribute documentation, and much more. \"\n            marginBottom={24}\n          />\n          <Text\n            size=\"body-1\"\n            color={theme.accent}\n            text=\"Previously, I have worked at Carta and Blend as a design technologist and Intuit as a software developer. I graduated from  Carnegie Mellon University with a B.S in Information Systems and an additional B.S. in  Human Computer Interaction. \"\n          />\n        </div>\n      </div>\n      <div className=\"projects main-container\" id=\"scroll-projects\">\n        <DesignSystems />\n        <ToolsAndOps />\n        <Prototyping />\n        <Rule />\n      </div>\n      <div className=\"photography main-container\" id=\"scroll-photography\">\n        <Photography />\n        <EditorialAndLookbook />\n        <Rule />\n      </div>\n      <div className=\"contact main-container\" id=\"scroll-contact\">\n        <div>\n          <Contact />\n          <Rule />\n        </div>\n\n        <Footer color={theme.accent} />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/pgh.8c16bcaa.jpg\";","export default __webpack_public_path__ + \"static/media/montanadoro.77b81c1f.jpg\";","export default __webpack_public_path__ + \"static/media/bodega.e90cdde4.jpg\";","export default __webpack_public_path__ + \"static/media/honolulu.e9130259.jpg\";","export default __webpack_public_path__ + \"static/media/halfmoon.ad55ff91.jpg\";","import React from 'react';\nimport './photography.style.scss';\nimport { Text } from '../../components/text/text.component';\nimport { Footer } from '../../components/footer/footer.component';\nimport { theme } from '../../colors.js';\nimport pgh from '../../assets/images/pgh.jpg';\nimport montanadoro from '../../assets/images/montanadoro.jpg';\nimport bodega from '../../assets/images/bodega.jpg';\nimport honolulu from '../../assets/images/honolulu.jpg';\nimport halfmoon from '../../assets/images/halfmoon.jpg';\n\nconst summary = `Here are just some of my favorite photographs that I’ve taken over the years. I shoot primarily 120 film (aka ‘medium format’), but sometimes I still use a Nikon FM2 for good old 35mm film - the stuff most of us grew up on before the digital age. For medium format, I currently own a Bronica ETRSi, Mamiya RZ67, and Plaubel Makina 67.`;\n\nexport const Photography = () => {\n  return (\n    <div className=\"photography-page\">\n      <Text\n        size=\"display-1\"\n        color={theme.primary}\n        text={'Analogue Photography'}\n        marginBottom={16}\n      />\n      <Text\n        size=\"body-1\"\n        color={theme.black}\n        text={summary}\n        marginBottom={80}\n      />\n      <img src={pgh} alt=\"Pittsburgh, Pennsylvania\" />\n      <img src={montanadoro} alt=\"Montaña D'oro, San Luis Obispo, California\" />\n      <img src={bodega} alt=\"Bodega Bay, California\" />\n      <img src={honolulu} alt=\"Honolulu, Hawaii\" />\n      <img src={halfmoon} alt=\"HalfMoon Bay, California\" />\n\n      <Footer color={theme.black} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Text } from '../../components/text/text.component';\nimport './UnderConstruction.style.scss';\nimport { theme } from '../../colors.js';\n\nconst headline = 'Under Construction!';\nconst blurb =\n  \"This content is coming soon, and I am currently hard at work writing it. If you'd like to chat specifically about a certain topic, please contact me.\";\n\nexport const UnderConstruction = () => {\n  return (\n    <div className=\"under-construction\">\n      <div className=\"under-construction-content\">\n        <Text\n          size=\"display-1\"\n          color={theme.accent}\n          text={headline}\n          marginBottom={16}\n        />\n        <Text\n          size=\"body-1\"\n          color={theme.accent}\n          text={blurb}\n          marginBottom={16}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UnderConstruction;\n","import React from 'react';\nimport { Text } from '../../components/text/text.component';\nimport './NotFound.style.scss';\nimport { theme } from '../../colors.js';\n\nconst headline = 'Page not found!';\nconst blurb =\n  'You probably hit a broken link or tried link hopping - please press the back button on your browser. ';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <div className=\"not-found-content\">\n        <Text\n          size=\"display-1\"\n          color={theme.accent}\n          text={headline}\n          marginBottom={16}\n        />\n        <Text\n          size=\"body-1\"\n          color={theme.accent}\n          text={blurb}\n          marginBottom={16}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { IProjectsProps } from './prose.model';\nimport { Text } from '../../text/text.component';\nimport { Footer } from '../../footer/footer.component';\nimport { theme } from '../../../colors.js';\nimport './prose.style.scss';\n\nexport const Prose = ({ content, date, summary, title }: IProjectsProps) => {\n  return (\n    <div className=\"prose\">\n      <div className=\"prose-block\">\n        <Text\n          size=\"display-1\"\n          color={theme.black}\n          text={title}\n          marginBottom={16}\n        />\n        <i>\n          <Text\n            size=\"body-1\"\n            color={theme.black}\n            text={date}\n            marginBottom={16}\n          />\n        </i>\n        <Text\n          size=\"body-1\"\n          color={theme.black}\n          text={summary}\n          marginBottom={8}\n        />\n      </div>\n      {content.map((c) => {\n        if (c.section && c.content) {\n          return (\n            <div className=\"prose-block\">\n              <Text\n                size=\"display-2\"\n                color={theme.black}\n                text={c.section}\n                marginBottom={16}\n              />\n              {c.content.map((contentBlock) => {\n                if (contentBlock && contentBlock.type === 'div') {\n                  return (\n                    <Text\n                      size=\"body-1\"\n                      color={theme.black}\n                      text={contentBlock}\n                      marginBottom={16}\n                    />\n                  );\n                } else if (contentBlock && contentBlock.type === 'img') {\n                  return contentBlock;\n                } else {\n                  return contentBlock;\n                }\n              })}\n            </div>\n          );\n        } else {\n          return null;\n        }\n      })}\n      <Footer color={theme.black} marginTop={80} />\n    </div>\n  );\n};\n\nexport default Prose;\n","import React from 'react';\nimport { IListProps } from './list.model';\nimport { Text } from '../../components/text/text.component';\nimport './list.style.scss';\n\nexport const List = ({ ordered = false, listItems, size }: IListProps) => {\n  const ol = (\n    <ol>\n      {listItems.map((l) => {\n        return (\n          <li>\n            <Text size={size} text={l} />\n          </li>\n        );\n      })}\n    </ol>\n  );\n\n  const ul = (\n    <ul>\n      {listItems.map((l) => {\n        return (\n          <li>\n            <Text size={size} text={l} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n\n  return <div className=\"text-list\">{ordered ? ol : ul}</div>;\n};\n\nexport default List;\n","import React from 'react';\nimport { Text } from '../../components/text/text.component';\nimport { IImageWithCaptionProps } from './ImageWithCaption.model';\nimport classNames from 'classnames';\nimport './ImageWithCaption.style.scss';\n\nexport const ImageWithCaption = ({\n  caption,\n  iphone = false,\n  white = false,\n  src,\n}: IImageWithCaptionProps) => {\n  const imgClass = classNames({\n    'iphone-img': iphone,\n    'white-background': white,\n  });\n  return (\n    <div className=\"image-with-caption\">\n      <img src={src} className={imgClass} alt={caption} />\n      <Text size=\"body-2\" text={caption} />\n    </div>\n  );\n};\n\nexport default ImageWithCaption;\n","export default __webpack_public_path__ + \"static/media/OTMBanner.337cc426.png\";","export default __webpack_public_path__ + \"static/media/OTMEmblem.f0d7c28a.png\";","export default __webpack_public_path__ + \"static/media/OTMFramerX.48797878.png\";","export default __webpack_public_path__ + \"static/media/OTMProtopie.4d35402f.png\";","export default __webpack_public_path__ + \"static/media/OTMRBC.a271dcd4.png\";","export default __webpack_public_path__ + \"static/media/OTMLoading.a56ef311.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport OTMBanner from '../../assets/images/projects/OTM/OTMBanner.png';\nimport OTMEmblem from '../../assets/images/projects/OTM/OTMEmblem.png';\nimport OTMFramerX from '../../assets/images/projects/OTM/OTMFramerX.png';\nimport OTMProtopie from '../../assets/images/projects/OTM/OTMProtopie.png';\nimport OTMRBC from '../../assets/images/projects/OTM/OTMRBC.png';\nimport OTMLoading from '../../assets/images/projects/OTM/OTMLoading.png';\n\nexport const OTM = () => {\n  const OTMMarketingLink = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://blend.com/one-tap/'}\n    >\n      <Text size=\"link-1\" text=\"one of Blend's flagship products\" />\n    </a>\n  );\n  const ForumDemo = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://otm-forum-demo.netlify.app/'}\n    >\n      <Text size=\"link-1\" text=\"prototype\" />\n    </a>\n  );\n  // const RBCDemo = (\n  //   <a\n  //     className=\"action-link\"\n  //     target=\"_blank\"\n  //     rel=\"noreferrer\"\n  //     href={'https://otm-rbc-demo.netlify.app/'}\n  //   >\n  //     <Text size=\"link-1\" text=\"here\" />\n  //   </a>\n  // );\n  // const FramerXDemo = (\n  //   <a\n  //     className=\"action-link\"\n  //     target=\"_blank\"\n  //     rel=\"noreferrer\"\n  //     href={'https://cmu-otm-demo.netlify.app/'}\n  //   >\n  //     <Text size=\"link-1\" text=\"early days of OTM\" />\n  //   </a>\n  // );\n  const summaryText = (\n    <div>\n      <ImageWithCaption src={OTMBanner} caption=\"One-tap Mobile aka OTM\" />\n      One-tap Mobile aka OTM has been {OTMMarketingLink}, and it was an honor to\n      be put on the project as the prototyper for such a high profile project.\n      My goal was to leverage production level components to build the highest\n      fidelity proof of concept (mobile only) to not only test out new\n      experiences but also to provide the engineers a higher fidelity mock up to\n      build off of since the One Tap experience was heavy on interactions and\n      content. Over the course of the project, I built multiple iterations of\n      the project ranging from sales demos and prototypes for user studies\n      leveraging mostly ReactJS but also exploring alternative prototyping\n      tooling solutions like FramerX and ProtoPie.\n      <br />\n      <br />\n      Check out the {ForumDemo}! Please view on mobile.\n    </div>\n  );\n\n  const OTMContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'Built a dynamic and end to end hi-fidelity prototype',\n            'Explored and designed loading state experience',\n            'Ideated new interactions',\n            'Produced tailor made sales demos for clients',\n            'Produced demos for user tests',\n            'Leveraged production level react components',\n            'Architected a system to change colors and branding for sales demos',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          Blend's vision for 2019 was to drastically change how mortgages could\n          be completed: the goal was to try and net a user a preapproval letter\n          with ‘one-tap.’ The idea was that, given the right circumstances with\n          bank accounts and data all connected, a user could log in on their\n          phone when house hunting, and get a preapproval letter instantly.\n          Through Blend’s app and if the user had most of their financial\n          information and assets in one of Blend’s clients (read as clients like\n          Wells Fargo), OTM could process all the information and handle all the\n          underwriting to provide a preapproval letter.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          This was a brand new experience that Blend was setting out to test\n          out, so I was brought on the Design team as the dedicated prototyper\n          to work with design through the flows and the overall experience to\n          produce a working {ForumDemo} for user testing as well as a handoff\n          item for engineering to reference. OTM is a very intricate experience\n          since there is a huge amount of behind the scenes processes that need\n          to happen sequentially for the experience to work. The design team had\n          to figure out the whole flow (at a high level) from:\n        </div>,\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'Logging into their financial institution',\n            'Providing consent for OTM',\n            'Surfacing a potentially long loading state while OTM fetches and processes data',\n            \"Showcasing and educating a user's buying power\",\n            'Produce a preapproval letter',\n            'Provide methods for a user to edit or add information to increase their buying power or modify the preapproval letter',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <ImageWithCaption\n          src={OTMFramerX}\n          iphone\n          caption=\"OTM in its early days, built with FramerX\"\n        />,\n        <ImageWithCaption\n          src={OTMEmblem}\n          iphone\n          caption=\"OTM is a whitelabel solution\"\n        />,\n        <ImageWithCaption\n          src={OTMRBC}\n          iphone\n          caption=\"OTM branded for a demo for RBC\"\n        />,\n        <ImageWithCaption src={OTMLoading} caption=\"Loading states for OTM\" />,\n\n        <ImageWithCaption\n          src={OTMProtopie}\n          white\n          caption=\"Authentication and Prefill prototypes for user testing\"\n        />,\n      ],\n    },\n  ];\n  return (\n    <Projects\n      title=\"One-Tap Mobile\"\n      date=\"Mar 2019 - Sept 2019\"\n      summary={summaryText}\n      content={OTMContent}\n    />\n  );\n};\n\nexport default OTM;\n","export default __webpack_public_path__ + \"static/media/accordion_ids.e6b2694d.gif\";","export default __webpack_public_path__ + \"static/media/accordion_tron.c79fbecf.gif\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport accordion_ids from '../../assets/images/projects/intuit/accordion_ids.gif';\nimport accordion_tron from '../../assets/images/projects/intuit/accordion_tron.gif';\nimport { Link } from 'react-router-dom';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\n\nexport const IDSAccordion = () => {\n  const Intuit = (\n    <Link className=\"action-link\" to=\"/DocUploader\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"Intuit\" />\n    </Link>\n  );\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={accordion_tron}\n        caption=\"The Intuit Design Systems Accordion seen in Payments Onboarding with Chase in production\"\n      />\n      During my time as a software engineer at {Intuit}, I came across an\n      opportunity to contribute to an upcoming design system: Intuit Design\n      System [IDS]. This was one of my first experience in design systems: what\n      started as a spike thus evolved into a journey to contribute a new\n      component do a design system as an engineer. I had the pleasure of taking\n      a component from early design concepts, to prototyping, and finally\n      implementing a production ready accordion.\n    </div>\n  );\n\n  const IDSContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Architected and Implemented component',\n            'Provide technical and interaction feedback',\n            'Created hi-fi prototypes',\n            'Implemented Accessibility support',\n            'Integrated component into IDS review process',\n            'Consumeed & implemented accordion in product',\n            'Worked with engineers from 2 external BUs to support and extend component',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          A new UI component is introduced to Quickbooks Online: the accordion +\n          container-like features. This component would be used throughout\n          quickbooks for various onboarding flows. There are no existing\n          components from Intuit's proprietary component library, and\n          furthermore, the current component library would also be deprecated.\n          The designs presented were simply done through sketch; thus,{' '}\n          <b>\n            things like easing (animation) as well as accessbility were not\n            thought of during the intial design process\n          </b>\n          . Current onboarding flows would either be too long or broken into\n          multiple pages, thus forcing a user with a very rigid flow.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          The ultimate goal was to not only make a component that my team can\n          use, but also make a component that could be potentially used by other\n          teams. This accordion was a crucial component in a sense that it could\n          provide users flexibility when it came to filling out forms: a form\n          broken down to sections that could not only summarize each section but\n          also provide the user the freedom to preview what they need to\n          accomplish and to start wherever they desired. This accordion was made\n          so that custom header and body content could be used so that consumers\n          of this component had full control as to what they want to display to\n          the user. This is powerful so that the accordion could be dynamic:\n          different states of the accordion could show different content.\n          <br />\n          <br />\n        </div>,\n        <div>Key Features:</div>,\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Collaboration with motion designers to be consistent with Intuit’s new motion design guidelines',\n            'Customizable to different themes to match Intuit’s respective products',\n            'Working towards graduation for officially being a part of Intuit Design Systems',\n            'Upgraded project to React 16',\n            'Collaboration with Accessibility team to meet Intuit’s standards',\n            'Provide help and information externally to other teams for consumption',\n          ]}\n        ></List>,\n        <ImageWithCaption\n          src={accordion_ids}\n          caption=\"The Accordion in the Intuit Design Systems gallery\"\n        />,\n\n        <div>\n          At the end of the contribution, I was able to make something that\n          could be used throughout Intuit, as I felt that it would be ultimately\n          inefficient for another team to develop the same thing. In fact,\n          multiple teams were designing new UIs with the accordion style that my\n          team was using. This accordion currently sits as a lab component, but\n          once two teams use it and it meets proper code coverage, it will be\n          graduated into IDS officially, and it will be packaged into every\n          project automatically as currently it is available in Intuit’s npm\n          registry meaning developers have to install it manually.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Intuit Design Systems Accordion\"\n      date=\"Jun 2017 - Aug 2017\"\n      summary={summaryText}\n      content={IDSContent}\n    />\n  );\n};\n\nexport default IDSAccordion;\n","export default __webpack_public_path__ + \"static/media/docupload_pre.549be78a.png\";","export default __webpack_public_path__ + \"static/media/docupload.6000e235.gif\";","import React from 'react';\nimport Projects from '../../../components/templates/prose/prose.component';\nimport docupload_pre from '../../../assets/images/projects/intuit/docupload_pre.png';\nimport docupload from '../../../assets/images/projects/intuit/docupload.gif';\nimport { List } from '../../../components/list/list.component';\nimport { ImageWithCaption } from '../../../components/ImageWithCaption/ImageWithCaption.component';\n\nexport const DocUploader = () => {\n  const summaryText = (\n    <div>\n      <ImageWithCaption src={docupload} caption=\"DocUploader in production\" />\n      DocUploader was a feature that was created based on a huge customer pain\n      point: providing ID documentation so that the customer could be verified\n      for using Payments with Quickbooks. This project took roughly 4 weeks to\n      implement, test, and release end to end.\n    </div>\n  );\n\n  const DocUploaderContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Implement complete front end of feature',\n            'Collaborated with design, customer success, and back-end engineers to roll out feature',\n            'Spec-ed out interaction edge cases and error handling',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          As part of the onboarding process, about 10% of customers sign up need\n          to verify their identity by providing a form of Identification\n          Document (Passport, Driver License, etc). The previous process was\n          that the customer had to call customer care and fax/email their\n          documentation, which took roughly 24-48 hours to complete, depending\n          on what was needed. This is a huge pain point for the customer:\n          calling customer care is never fun, and sending over sensitive\n          information over the phone can be difficult.\n        </div>,\n        <ImageWithCaption\n          src={docupload_pre}\n          caption=\"Documentation Needed state: message displayed to user to call customer care to resolve ID verification\"\n        />,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          Docuploader was created with the intention of providing a faster way\n          for a user to verify their Identity. Considerations were made so that\n          the upload process would be straightforward: provide flexibility in\n          terms of documents that could be used for verification and provide\n          multiple ways to upload. We wanted to let the user be confident with\n          what they are submitting, thus providing a thumbnail of the uploaded\n          image, as well as a way to view it at a greater scale. The purpose of\n          DocUploader was only to provide a way to upload an image, on the UI\n          and service side, there was nothing done to verify fraudulent or bad\n          photos - this step was handled on the Payment or Risk processor's\n          side.\n        </div>,\n        <div>\n          With DocUploader, the customer was able to attach a picture and send\n          it online without having to talk to a care agent with the following\n          steps:\n        </div>,\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'As part of onboarding, user is prompted by signup to verify ID doc OR User is prompted by email sent through care agent to verify ID',\n            'User selects type of ID document they would like to upload',\n            'User drag and drops file on the drop area, or clicks browse button to upload image. Mobile users can take a picture and attach directly',\n            'UI displays thumbnail, file size, and link to enlarge image in new tab for verification.',\n            'User uploads picture and recieves confirmation that their image has been successfully uploaded.',\n            'Customer Care & Risk evaluate and verify image.',\n          ]}\n        ></List>,\n        <div>\n          With DocUploader, a process that took 24-48 hours was cut down to\n          about 10 minutes. Roughly 200+ uploads were made within the first\n          month, and that saved Intuit about at least $5,000 at $25 per care\n          call. However, the most important part was that we were able to save\n          the user’s time as well as care agents’ time.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"DocUploader\"\n      date=\"Mar 2017 - Apr 2017\"\n      summary={summaryText}\n      content={DocUploaderContent}\n    />\n  );\n};\n\nexport default DocUploader;\n","export default __webpack_public_path__ + \"static/media/SRLegacy_alpha.4d26ad95.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_landing.72d5667a.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_home.6f39f042.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_spec.02705758.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_STRAT_card.2baa59f2.png\";","export default __webpack_public_path__ + \"static/media/SRLegacy_logo_2.f5ea9876.svg\";","export default __webpack_public_path__ + \"static/media/SRLegacy_logo_4.3941c6d1.svg\";","export default __webpack_public_path__ + \"static/media/SRLegacy_logo_6.9296b488.svg\";","export default __webpack_public_path__ + \"static/media/SRLegacy_logo_final.e1ca1c3f.svg\";","import React from 'react';\nimport Projects from '../../../components/templates/prose/prose.component';\nimport { List } from '../../../components/list/list.component';\nimport { ImageWithCaption } from '../../../components/ImageWithCaption/ImageWithCaption.component';\nimport { Text } from '../../../components/text/text.component';\nimport SRLegacy_Alpha from '../../../assets/images/projects/SRLegacy/SRLegacy_alpha.png';\nimport SRLegacy_landing from '../../../assets/images/projects/SRLegacy/SRLegacy_landing.png';\nimport SRLegacy_home from '../../../assets/images/projects/SRLegacy/SRLegacy_home.png';\nimport SRLegacy_spec from '../../../assets/images/projects/SRLegacy/SRLegacy_spec.png';\nimport SRLegacy_STRAT_card from '../../../assets/images/projects/SRLegacy/SRLegacy_STRAT_card.png';\nimport SRLegacy_logo_2 from '../../../assets/images/projects/SRLegacy/SRLegacy_logo_2.svg';\nimport SRLegacy_logo_4 from '../../../assets/images/projects/SRLegacy/SRLegacy_logo_4.svg';\nimport SRLegacy_logo_6 from '../../../assets/images/projects/SRLegacy/SRLegacy_logo_6.svg';\nimport SRLegacy_logo_final from '../../../assets/images/projects/SRLegacy/SRLegacy_logo_final.svg';\n\nexport const SRLegacy = () => {\n  const summaryText = (\n    <div>\n      StratRoulette [SR] is a project created by my good friend Justin Chen from\n      CMU. SR is essentially a form of \"spin the wheel\" that tells someone how\n      to play a game - in this case, the game is CounterStrike. I primarily work\n      on and, in a way, pioneer StratRoulette’s identity and feature\n      development, but I also take part in the front end development in React.\n    </div>\n  );\n\n  const SRLegacyContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'Lead product designer',\n            'Designed all flows and interactions of the app',\n            'Created branding identity',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          One of the obvious \"problems\" with StratRoulette was that it was\n          bootstrapped together with minimal thought on branding, layout,\n          information heirarchy, and overall aesthetics. However, the main\n          problem was that StratRoulette was in ALPHA stages, and if we wanted\n          to develop more features, we would need a foundation for design. With\n          a foundation of layout and common ui components, Justin could spend\n          more time on developing features. StratRoulette also lacked in things\n          like feature discovery and promoting user engagement. Overall\n          usability was lacking as well since StartRoulette only grew threw word\n          of mouth, but it ultimately was not intuitive to a new user.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_Alpha}\n          caption=\"StratRoulette in the early days\"\n        />,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          StratRoulette took off around 2015, and in 2017 I was asked to do a\n          redesign to not only develop an identity for the application but also\n          create and design user flows that would help foster community\n          engagement. Ultimately, we wanted to develop a design language so that\n          we could scale and build something that looked more modern. With that,\n          I was tasked to brainstorm an identity for StratRoulette, develop\n          layouts and pages for the developers with usability in mind.\n        </div>,\n        <div>\n          For every page I designed, I looked up common conventions and patterns\n          that users are accustomed to from apps like Soundcloud. We wanted to\n          encourage user enagement, so we wanted to create a home page feed to\n          show user activity, but also provide a convenient way to contribute\n          Strats. A landing page was also needed since we want to showcase what\n          StratRoulette is used for and what it can do. We incorporated user\n          accounts so that users could save their content as well as discuss and\n          vote on other content.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_landing}\n          caption=\"StratRoulette landing page, a place to showcase what StratRoulette does\"\n        />,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <div>\n          My role for SR is two fold: I am in charge of developing and\n          maintaining some sort of identity through branding and ui components\n          so that we have a framework for designing and developing features, and\n          I am responsible for designing new features and work flows for users\n          so that we can expand SR.\n        </div>,\n        <Text\n          size=\"subheader-1\"\n          text=\"Identity &amp; Components\"\n          marginTop={16}\n          marginBottom={16}\n        />,\n        <div>\n          When it came to designing StratRoulette, I wanted to make sure that we\n          were consistent with overall styling of the application. My first\n          order of business was mainly just to create a small foundation of UI\n          components: font, colors, input, grid, and more. Once that foundation\n          was layed out, StratRoulette had some sort of identity, thus we could\n          move on with creating layouts and certain user flows like landing\n          page, submitting a start, etc.\n        </div>,\n        <div>\n          I really wanted to make sure the whole website was made so that it\n          could be catered towards different types of games, as we were thinking\n          of expanding from CS:GO. I ultimately was just tired of seeing really\n          bright or neon and crazy looking text on websites to fit the brand of\n          the game, and since SR is not really tied to a game, I figured I could\n          just start from scratch and keep it minimal. I first just started out\n          by picking some colors, really just anything I felt, and at that time\n          I felt like electric blue and a dark black/grey would be pretty\n          fitting as accent colors. All the icons made in SR were also created\n          by me with a little bit of illustrator magic.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_spec}\n          caption=\"StratRoulette initial component spec sheet\"\n        />,\n        <Text\n          size=\"subheader-1\"\n          text=\"Logo designs\"\n          marginTop={16}\n          marginBottom={16}\n        />,\n        <div>\n          The first order of business for StratRoulette was for me to create a\n          logo. The biggest motivation for me was to not make it look to\n          “gamer,” and also not too boring. What I shortly realized was that\n          making some sort of logo or monogram with the letters “S” and “R” were\n          quit tricky.\n        </div>,\n        <div>\n          The first iterations were based on a hexagonal shape, similar to a\n          revolver barrel. I wanted to really emphasize the roulette part, and I\n          thought it would be interesting with the idea “russian roulette.”\n          However, it was hard for me to execute and figure out where the S\n          would ultimately be.\n        </div>,\n        <img\n          className=\"SR-logo\"\n          src={SRLegacy_logo_2}\n          alt={'sr logo attempt 1'}\n        />,\n        <div>\n          Then, I tried more of a symmetric approach, as I tried to make the S\n          and the R shapes look more similar, but it just seemed to take too\n          much space\n        </div>,\n        <img\n          className=\"SR-logo\"\n          src={SRLegacy_logo_4}\n          alt={'sr logo attepmt 2'}\n        />,\n        <div>\n          Next was some sort of lightning bolt to convey the fast paced nature\n          of SR, and the R was placed as more of an exponent and not the main\n          focus.\n        </div>,\n        <img\n          className=\"SR-logo\"\n          src={SRLegacy_logo_6}\n          alt={'sr logo attempt 3'}\n        />,\n        <div>\n          However, the last iteration was something completely unorthodox. I was\n          really inspired by something like Parley’s icons with some sort of\n          circle border, and I just toyed around with switching the emphasis of\n          the letters. Ultimately, I came to this by just trying it out, but I\n          seemed to like it more: the letter “R” seemed to fit better with a\n          Circle, as it wasn’t clashing with either sharp edges or curved edges\n          of the bends. This logo is used for the main page, as well as the\n          favicon. Note that the favicon does not have the “StratRoulette” text\n          in the circle, as it is too small to be read or seen.\n        </div>,\n        <img\n          className=\"SR-logo\"\n          src={SRLegacy_logo_final}\n          alt={'sr logo final'}\n        />,\n\n        <Text\n          size=\"subheader-1\"\n          text=\"Product designs\"\n          marginTop={16}\n          marginBottom={16}\n        />,\n        <div>\n          The most important part was to showcase the Strat card because it was\n          the one thing that users directly interacted with. We wanted to show\n          what new things we added: color coding towards games, a save and share\n          button, tags, etc, and furthermore this would be a component that\n          shows up everywhere. We wanted to provide a way for people to\n          contribute strats, search/filter for strats, roll strats (when they\n          play the game), and comment on strats.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_STRAT_card}\n          caption=\"The strat card showcasing tags, votes, share button, and improved information hierarchy.\"\n        />,\n        <div>\n          A big problem with StratRoulette's original strat card was that there\n          was no separation of information: there was a string of text for a\n          strat and the name of the user who submitted it. Furthermore, the\n          information blended into the webpage, there was no way for a user to\n          really understand that a strat was present upon the first roll or page\n          load. Thus, the idea of a strat card came into play: we wanted to\n          effectively provide information to the user. Since strats are viewed\n          quickly during games, it is important to have proper information\n          hierarchy: valuable time is lost to the user if they have to look\n          carefully, and sometimes users do not have the patience to look around\n          for information.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_Alpha}\n          caption=\"StratRoulette's early version of a start: you could not distinguish what information was important or not.\"\n        />,\n        <div>\n          The Home page is quite similar to something you would typically see in\n          most social media feeds. The idea was that we wanted to show the\n          activity feeds of people that a user follow and show what Strats are\n          being favorited or created. Essentially this page is where people\n          share strat cards, playbooks (collections of strats), and more. I was\n          ultimately inspired by how SoundCloud takes the “social media”\n          approach of sharing music, where people post songs or repost songs,\n          instead of acting like a typical music library. The same goes for SR,\n          we wanted it to act not only as a repository of strats that people\n          contribute, but we want to be able to showcase them and share them\n          easily.\n        </div>,\n        <ImageWithCaption\n          src={SRLegacy_home}\n          caption=\"StratRoulette's homepage feed showcasing trending strats and easy access for the user to contributing content.\"\n        />,\n      ],\n    },\n  ];\n  return (\n    <Projects\n      title=\"StratRoulette [v0.1 | ARCHIVE]\"\n      date=\"Aug 2017 - Dec 2017\"\n      summary={summaryText}\n      content={SRLegacyContent}\n    />\n  );\n};\n\nexport default SRLegacy;\n","export default __webpack_public_path__ + \"static/media/WaitTask.56a5ed7b.png\";","export default __webpack_public_path__ + \"static/media/WaitTaskScreens.8a53467d.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport WaitTask from '../../assets/images/projects/WaitTask/WaitTask.png';\nimport WaitTaskScreens from '../../assets/images/projects/WaitTask/WaitTaskScreens.png';\n\nexport const WaitTaskV2 = () => {\n  const prototype = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://wait-task-v2.netlify.app/'}\n    >\n      <Text size=\"link-1\" text=\"prototype\" />\n    </a>\n  );\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={WaitTask}\n        white\n        caption=\"Wait Task V2 is a dynamic yet informative loading experience for home insurance customers\"\n      />\n      Wait Task V2 is a project where prototyping was leveraged to flesh out a\n      loading experience through code. A hi-fi prototype was made in a matter of\n      days to help the Design team figure out transitions, content, and\n      technical constraints. The prototype was coded in ReactJS and served as a\n      not only a working sandbox for designers to see the experience in real\n      time but also a handoff item for engineering and thus saving several weeks\n      of development time.\n      <br />\n      <br />\n      Check out the {prototype}!\n    </div>\n  );\n\n  const WaitTaskContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Created a hi-fi prototype with ReactJS',\n            'Collaborated with Design to work through step by step transitions',\n            'Collaborated with Engineering for hand off and walked through code',\n            'Aided Engineering in making code production ready',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          The original Wait Task experience was simply a spinner with some text\n          that lasted somewhere around 30 seconds, and the home insurance team\n          wanted to make the experience more dynamic and informative for the\n          user.\n        </div>,\n        <ImageWithCaption\n          src={WaitTaskScreens}\n          caption=\"The three stages of the Wait Task experience\"\n        />,\n        <div>\n          I was presented a few screens in Figma, and there were three ‘stages’\n          of the wait task. However, many of the transitions were not figured\n          out and there seemed to be a lot of moving pieces between each\n          ‘stage.’ Thus, we figured it would be small enough scope but yet\n          worthwhile to invest time to coding a hi-fi prototype in order to work\n          through all the transitions and intricate interactions.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          As mentioned, the prototype that I was able to produce with the Design\n          team served as a deliverable for hand off for the engineering team.\n          The prototype came to be a useful addition to the design mocks since\n          the engineers could see exactly what was happening frame by frame, but\n          most importantly, the engineers could also reference my code.\n          <br />\n          <br />\n          Check out the {prototype}!\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Home Insurance Wait Task V2\"\n      date=\"October 2019\"\n      summary={summaryText}\n      content={WaitTaskContent}\n    />\n  );\n};\n\nexport default WaitTaskV2;\n","export default __webpack_public_path__ + \"static/media/AbstractMigrateDefine.c601622a.png\";","export default __webpack_public_path__ + \"static/media/AbstractMigrateTimeline.eaf96acc.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { List } from '../../components/list/list.component';\nimport { Text } from '../../components/text/text.component';\nimport AbstractMigrateDefine from '../../assets/images/projects/AbstractMigrate/AbstractMigrateDefine.png';\nimport AbstractMigrateTimeline from '../../assets/images/projects/AbstractMigrate/AbstractMigrateTimeline.png';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\n\nexport const AbstractMigrate = () => {\n  const AbstractAPI = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://sdk.goabstract.com/docs/abstract-api/'}\n    >\n      <Text size=\"link-1\" text=\"Abstract's API\" />\n    </a>\n  );\n  const summaryText = (\n    <div>\n      This was a quarter long initiative where the design technology team fully\n      sunset Abstract in roughly a quarter by leveraging {AbstractAPI}. Over my\n      first year at blend, the Product Design team slowly moved onto Figma, and\n      in Q1 of 2020, we set out to migrate all of the legacy Sketch files into\n      Box. I created a script that helped save 100s of hours of each product\n      designer's time that would have been spent manually moving the files to\n      Box. Over 750 sketch files were migrated with the script.\n    </div>\n  );\n\n  const AbstractMigrateContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Created rollout plan fo sunsetting Abstract',\n            'Created a node.js script leveraging Abstract’s API to programmatically download files',\n            'Defined structure for labelling files',\n            'Held monthly power hours to tag and archive legacy sketch files',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          When I joined Blend around February 2019, Figma was gaining traction\n          within the product design team, and it became the unofficial design\n          tool that everyone started using. However, we spent about the next\n          year floating between old files in Sketch and creating new files in\n          Figma.\n        </div>,\n\n        <div>\n          For those not familiar with Abstract, in theory it serves as something\n          similar to a git repository but for sketch files. Thus, it houses all\n          of Blend’s Sketch projects in the following manner: A project can have\n          many branches (like master/main, explorations, etc). Each branch is\n          essentially a Sketch file, and a project entails many branches (or\n          sketch files) like the following:\n        </div>,\n        <pre>\n          <code>blend-projects/</code>\n          <br />\n          <code>&nbsp;&nbsp;project-1/</code>\n          <br />\n          <code>&nbsp;&nbsp;&nbsp;&nbsp;branch-A/</code>\n          <br />\n          <code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-A.sketch</code>\n          <br />\n          <code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file-B.sketch</code>\n          <br />\n          <code>&nbsp;&nbsp;&nbsp;&nbsp;branch-B/</code>\n          <br />\n          <code>&nbsp;&nbsp;project-2/</code>\n          <br />\n          <code>...</code>\n        </pre>,\n        <div>\n          Throughout that year, we tried to sunset Abstract twice. We failed to\n          do so the first time (roughly October 2019) because Abstract’s API\n          only let us list files in our Abstract ‘repo,’ but we could not\n          download at that time. On top of that, we had what turned out to be\n          roughly 100 projects (750+ files sketch files) in Abstract. The team\n          eventually abandoned the plan to sunset Abstract because of the sheer\n          amount of manual labor it would entail: downloading each branch from\n          each project and then moving the files to Box.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <ImageWithCaption\n          src={AbstractMigrateDefine}\n          caption=\"Defining what success looks like for the roll out plan.\"\n        />,\n        <div>\n          In March 2020, the PD team decided to revisit sunsetting Abstract as\n          the team found that most designers are now designing in Figma and\n          spending roughly 10% of their time in Sketch. For the most part, most\n          of the tasks being done in Sketch were simply referencing old files\n          less so designing.\n        </div>,\n        <div>\n          Thus, the design technology team set out to create a quarter long plan\n          to roll out sunsetting Abstract. The first task at hand was to create\n          a plan that would factor in the amount of time it require to have\n          designers manually migrate their files each at a bi-weekly or monthly\n          cadence. However, we decided to revisit the Abstract API to see if\n          they made any feature updates. Much to our surprise, they added\n          support to download files programmatically. we devised a plan that\n          determined when product designers should stop using Abstract, batch\n          download files, labelling, and thus fully sunsetting Abstract and\n          ending the subscription. Below, you can see what the overall timeline\n          was.\n        </div>,\n        <ImageWithCaption\n          src={AbstractMigrateTimeline}\n          caption=\"Timeline of rollout plan\"\n        />,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Abstract Migrate Tool\"\n      date=\"Mar 2020 - Jul 2020\"\n      summary={summaryText}\n      content={AbstractMigrateContent}\n    />\n  );\n};\n\nexport default AbstractMigrate;\n","export default __webpack_public_path__ + \"static/media/sapling_example.2faf8a4b.png\";","export default __webpack_public_path__ + \"static/media/sapling.209c7286.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport sapling_example from '../../assets/images/projects/Sapling/sapling_example.png';\nimport sapling from '../../assets/images/projects/Sapling/sapling.png';\n\nexport const Sapling = () => {\n  const summaryText = (\n    <div>\n      <ImageWithCaption src={sapling} caption=\"Sapling overview image\" />\n      Sapling is a figma plugin that creates a set page structure and cover page\n      for new figma files. This came as a result of an initiative to ensure\n      consistency amongst every designer's figma files for better organization\n      as well as collaboration with our cross functional partners.\n    </div>\n  );\n\n  const SaplingContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Project planned and set goals for the initiative',\n            'Audited existing files and highlighted areas of improvement',\n            'Created proposal for product design team',\n            'Created Figma plugin to automate & instantiate file structure',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          As we moved away from Sketch + Abstract and thus on to Figma, the last\n          two years have been a bit free form when it came to file organization\n          within Figma. Overall, we found that there was a lack of consistency\n          within our files. Furthermore, files moved within Figma teams\n          frequently due to changing priorities, team structure, and so on.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <ImageWithCaption\n          white\n          src={sapling_example}\n          caption=\"Sapling used in a Figma file\"\n        />,\n        <div>\n          Consistency in our file structure will help other designers and our\n          cross-functional partners better navigate to find the right designs.\n          Keeping the same page sections across files will provide quick context\n          to where someone might find the type of designs they need.\n        </div>,\n        <div>\n          We proposed a file structure so that each Figma File so that every net\n          new Figma File created would have the following:\n        </div>,\n        <List\n          size=\"body-1\"\n          listItems={[\n            '🖼 Cover page: project name, owner, and status',\n            '🚀 Production/shipped: screens that currently reflect prod',\n            '✅ Specs: handoff items/specs for eng',\n            '🔍  In Review [optional]: screens that need design or eng review',\n            '✍️ WIP: your working doc/explorations',\n            '🗄 Archive: outdated designs',\n            '⚡️ Demos [optional]: figma prototypes and demo screens',\n          ]}\n        ></List>,\n        <div>\n          Furthermore, we defined how Figma Teams, projects, and files relate to\n          our team structure and projects. Figma teams will be organized by\n          cohort to align with our EPD counterparts, though we recognize that\n          this may require a level of maintenance should cohorts evolve (as\n          we’ve seen this past year.)\n        </div>,\n        <div>\n          The most concrete artifacts we have are our features and our files are\n          going to be based on them. While multiple teams or multiple designers\n          may work on a file across multiple projects, the multiple variations\n          of a feature will be together. Our Figma files should like up with\n          features we are building.\n        </div>,\n        <div>\n          Hopefully our initiatives don't change as much as the teams working on\n          them. While they come and go in priority, the files they group\n          generally stay together. We'll be matching Figma projects to our\n          Initiatives.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"🌱 Sapling\"\n      date=\"Aug 2020 - Sept 2020\"\n      summary={summaryText}\n      content={SaplingContent}\n    />\n  );\n};\n\nexport default Sapling;\n","export default __webpack_public_path__ + \"static/media/haven_cover.3a310160.png\";","export default __webpack_public_path__ + \"static/media/haven.4ee10cbf.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport haven_cover from '../../assets/images/projects/Haven/haven_cover.png';\nimport haven from '../../assets/images/projects/Haven/haven.png';\nimport { Link } from 'react-router-dom';\n\nexport const Haven = () => {\n  const AbstractMigrate = (\n    <Link className=\"action-link\" to=\"/AbstractMigrate\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"abstract-migrate\" />\n    </Link>\n  );\n  const summaryText = (\n    <div>\n      <ImageWithCaption src={haven} caption=\"Haven cover\" />\n      Haven is a figma plugin I built to help product designers document and\n      protect their explorations and archived screens as well as tagging screens\n      for better handoff. Haven was a small side project and an opportunity to\n      explore tooling for the Product design team within Figma.\n    </div>\n  );\n\n  const HavenContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Proposed side project to work on based on needs of Product Designers',\n            'Researched and experimented with Figma’s API',\n            'Developed, designed, and published Blend’s first Figma Plugin',\n            'Carefully researched and planned out rollout of plugin',\n            'Educated brand and product designers on the plugin’s capabilities',\n            'Gathered feedback to iterate and ideate new features',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          One of the issues that product designers face at Blend (I'm sure this\n          is probably an issue at other startups as well) is having to design\n          features within a short turnaround and in fringe cases, old\n          explorations (we’re talking multiple years) would be mistaken as\n          design specs. Additionally, exploration files of current working files\n          would be mistaken as a spec, thus causing throw away work due to a\n          simple mix up.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <ImageWithCaption\n          src={haven_cover}\n          caption=\"Overview of HAven overlays and tags\"\n        />,\n        <div>\n          Haven’s conception mainly came out of two primary reasons: one was to\n          help product designers ‘protect’ their work by making explicit call\n          outs to exploratory work and another reason was to expand Design\n          Technology’s support within Product Design at Blend. I primarily took\n          this as an opportunity to support the Product Design team beyond\n          design systems. I’ve previously made the {AbstractMigrate} tool to\n          help with the migration off of Sketch + Abstract and on to Figma. My\n          next personal goal was to learn how to make a Figma Plugin, and upon\n          learning of a few of the issues that Product Designer’s faced, I chose\n          to make Haven for the team, and use it as a learning experience for my\n          own growth as well.\n        </div>,\n        <div>\n          Haven makes it easy for designers to add one of two overlays:\n          “EXPLORATION” or “ARCHIVE”. The overlays added will resize based on\n          the selected frames, and the text size as well as the text itself can\n          be modified. Additionally, designers can also add ‘tags’ above each\n          frame to label frames as “Needs Review,” “Prod Ready,” or a custom\n          label. Designers just have to select the frames they’d like to label,\n          run the plugin, and configure what the label or overlay will say.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Haven\"\n      date=\"June 2020\"\n      summary={summaryText}\n      content={HavenContent}\n    />\n  );\n};\n\nexport default Haven;\n","export default __webpack_public_path__ + \"static/media/figma_autolayout_2020.ef00ad79.pdf\";","export default __webpack_public_path__ + \"static/media/figma_variants.e54306fb.pdf\";","export default __webpack_public_path__ + \"static/media/Design_systems_process.7d872d09.pdf\";","export default __webpack_public_path__ + \"static/media/BDS.14b3e618.png\";","export default __webpack_public_path__ + \"static/media/consumer_storybook.54dfc46c.png\";","export default __webpack_public_path__ + \"static/media/design_systems_process.47c7be1d.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { Text } from '../../components/text/text.component';\nimport { Link } from 'react-router-dom';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport FigmaAutolayoutPDF from '../../assets/misc/figma_autolayout_2020.pdf';\nimport FigmaVariantsPDF from '../../assets/misc/figma_variants.pdf';\nimport DesignSystemProcessPDF from '../../assets/misc/Design_systems_process.pdf';\nimport BDS from '../../assets/images/projects/misc/BDS.png';\nimport consumer_storybook from '../../assets/images/projects/misc/consumer_storybook.png';\nimport design_systems_process from '../../assets/images/projects/misc/design_systems_process.png';\n\nexport const DesignSystemsAtBlend = () => {\n  const FigmaAutolayout = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={FigmaAutolayoutPDF}\n    >\n      <Text size=\"link-1\" text=\"Figma's 2020 Autolayout features\" />\n    </a>\n  );\n  const FigmaVariants = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={FigmaVariantsPDF}\n    >\n      <Text size=\"link-1\" text=\"Figma Variants\" />\n    </a>\n  );\n  const dsystemProcess = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={DesignSystemProcessPDF}\n    >\n      <Text size=\"link-1\" text=\"proposed a process/pipeline\" />\n    </a>\n  );\n  const prototypingAtBlend = (\n    <Link className=\"action-link\" to=\"/PrototypingAtBlend\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"a year of prototyping at Blend\" />\n    </Link>\n  );\n  const IDSAccordion = (\n    <Link className=\"action-link\" to=\"/IDSAccordion\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"accordion\" />\n    </Link>\n  );\n  const OTM = (\n    <Link className=\"action-link\" to=\"/OTM\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"One-Tap Mobile (aka OTM)\" />\n    </Link>\n  );\n  const Alchemy = (\n    <Link className=\"action-link\" to=\"/Alchemy\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"Alchemy Design System\" />\n    </Link>\n  );\n  const summaryText = (\n    <div>\n      As of writing this post, I currently work on Blend’s design system,\n      Alchemy, as one of the founding members of the design system. I found\n      myself finding a passion towards designs after about {prototypingAtBlend}.\n    </div>\n  );\n\n  const Content = [\n    {\n      section: 'My journey into design systems',\n      content: [\n        <div>\n          Prior to blend, I got a small glimpse of design systems when I\n          contributed to an {IDSAccordion} component for Intuit Design System.\n          During my stint working on the accordion component, I got a high level\n          understanding of what the benefit is of a component library. I found\n          that bigger companies have the resourcing to power a whole team that\n          owns a design system with tens of engineers and designers.\n        </div>,\n        <div>\n          As both a consumer and contributor of the design system, I got to\n          experience both ends of the system. Furthermore, I discovered what\n          requirements are needed to build a component from not only the code\n          side but also from the design side. I was exposed to taking a\n          component and meeting accessibility requirements like screen reader\n          support, keyboard shortcuts, and more. I also got an understanding of\n          the process of taking a component from our experimental library and\n          graduating it be published as an official component. Lastly, as a\n          developer, I got the pleasure of testing, creating, and educating\n          other engineers on the component for consumption in other\n          applications. Overall, looking back, I’m quite grateful to be able to\n          experience that since I can apply my own personal experiences to help\n          bring Alchemy to life at Blend. This all happened because I just\n          wanted to prototype a component interaction at Intuit, and it thus led\n          me down a deep yet rewarding rabbithole.\n        </div>,\n        <div>\n          Continuing my path forward with a passion for prototyping, I joined\n          Blend and embarked on a journey to bring prototyping onto Blend’s\n          radar. I prototyped {OTM} and thus discovered that Blend really could\n          use some work on the design systems front. By creating high fidelity\n          prototypes via ReactJS, I found the need for a design system: being\n          able to use a component library really saves me time from recreating\n          already existing components.\n        </div>,\n        <ImageWithCaption\n          src={consumer_storybook}\n          caption=\"Blend's storybook for consumer-components in 2020\"\n        />,\n        <div>\n          However, I soon found that there was much more required for a\n          component library: we lacked consistency between design and\n          engineering. Colors weren’t the names or even values, we still had the\n          majority of our “reusable” components in our monolith, and, worst off\n          yet, we lacked a source of truth. While I had to build my prototypes,\n          I started finding ways to contribute to help move the needle closer to\n          1:1 parity between design and engineering. I tried to help migrate\n          components like RadioGroup out of monolith and into our shared\n          component library. I added entries for components to Storybook as well\n          as documented the available design tokens like color and typography.\n        </div>,\n        <div>\n          Furthermore, I poked around prod and figma through countless audits to\n          highlight current design debt. At one point, I even ventured on into\n          tackling design debt in production. Notable tasks that got me really\n          in the weeds to shovel out all the design debt were: redesigning our\n          disabled state for our buttons in our enterprise app, updating\n          background colors in production, auditing icon usage, and more. For\n          one, I found that we simply don’t have the same names and values for\n          color and we were inconsistent with color usage throughout production.\n          On top of that, some of our color usage was too low in contrast, so my\n          work was to update and fix the design debt. Throughout all of those\n          tasks, I was super grateful that I spent some time actually learning\n          how to code and get the industry experience as a developer because it\n          really paid off since I could design with technical constraints in\n          mind. However, back then I did not really know what was needed for a\n          system: I kind of just did whatever I could to try and fix things. On\n          top of that, I dedicated my time towards some of the design and tech\n          debt so that it could help me do my task at hand easier: prototyping.\n        </div>,\n        <div>\n          Roughly about a year into my time at Blend, I made a conscious effort\n          to dedicate the majority of my time to learning more about design\n          systems and doing my best to help with the effort. I really wanted to\n          get more involved on the design front, as I felt that most of my time\n          was still in the weeds of code and less so Figma or Sketch. We were\n          still in the midst of just testing out Figma before Figma really just\n          popped off and became “the future” of design tools. Funnily enough, I\n          have grown to become a huge advocate for Figma for not only my own day\n          to day but also almost acting like a mini ambassador to our design\n          team as I wanted to share the knowledge that I learned through using\n          Figma for design systems. Over time, I’ve been able to gain product\n          designers’ trust and have the opportunity to teach and inform others\n          about {FigmaAutolayout} as well as {FigmaVariants}. However, before\n          that all happened, I felt that my time spent in Figma was still quite\n          lacking since I only used it to whiteboard prototyping flows and\n          interactions.\n        </div>,\n        <ImageWithCaption\n          src={BDS}\n          caption=\"Borrower design system was one of the first few libraries we migrated from Sketch to Figma\"\n        />,\n        <div>\n          An opportunity arose when I found that we were leaning towards\n          migrating most of our files to Figma, and two quarters later, we\n          committed as a design org that Figma would be our primary tool of\n          choice. One of the tasks at hand was to migrate our sketch library for\n          our consumer app to Figma. I volunteered myself to block out the two\n          to three weeks to migrate every. single. component. I tried to be\n          smart about the whole migration process and explored ways of importing\n          a Sketch file or simply copying over the assets, but all the line\n          heights were all messed up. Thus, we decided to redraw most of the\n          components by hand. As for illustrations, we had issues importing from\n          Sketch as well, so we had to hunt down the original assets from\n          illustrator and export them as svg and import them into Figma.\n        </div>,\n        <div>\n          A few of my coworkers were kind enough to help me along the way with\n          the burden (Thanks Iseri and Sara~). On top of that, Iseri taught me\n          one of the biggest takeaways of creating a system: figure out the\n          goddamn design token. It’s actually one of my fondest memories at\n          Blend since I knew nothing about Figma or managing a design library at\n          that time, and I was just so excited to learn anything I could. Thus\n          birthed Borrower Design System (in Figma), and it slowly became the\n          system that I maintained to the best of my abilities as a one man\n          team. I spent time uncovering design debt, adding documentation to\n          components, {dsystemProcess} for creating and maintaining components,\n          learned how Figma components worked, and much much more. Over the\n          course of a few quarters, I feel that my time spent migrating and\n          maintaining Borrower Design System was put to good use since it helped\n          me understand design systems on the design side.\n        </div>,\n        <ImageWithCaption\n          src={design_systems_process}\n          white\n          caption=\"We created a process to help design and engineering work closely together to either add or edit components.\"\n        />,\n        <div>\n          From Borrower Design System, I found my passion to work on design\n          systems. Fast forward to now, I’m working on {Alchemy}. All the work I\n          did leading up to Alchemy really helped set me up to be able to work\n          on creating a design system for Blend. All the time spent auditing,\n          prototyping, and messing around in Figma really paid off since it gave\n          me a whole lot of contextual knowledge of our products, component\n          libraries, and design files. I would argue that had I not started out\n          with prototyping, I would have had much less empathy and passion\n          towards design systems. I wouldn’t have been able to experience the\n          pain, ask all the annoying questions of “Do we have ____ component?”\n          or even “Why is this color different?,” and most importantly, I\n          wouldn’t have been able to experience what life is like without a\n          proper design system. Keep in mind, prior to blend, I had the luxury\n          of consuming a fully staffed and support design system as well as the\n          opportunity to contribute to a design system.\n        </div>,\n        <div>\n          At Blend, I gained a whole lot of empathy and understanding the pains\n          of not having a design system. I feel like I’ve come a long way, but I\n          still have much more to learn. This whole journey has been a moment\n          where no matter the challenges I’ve faced, I still really really\n          really wanted to work on a design system. For once, I’ve felt that I\n          enjoyed every aspect of the job even at its hardest moments. For now,\n          this seems like the right path forward, and I’m looking to grow and\n          learn everything I can.\n        </div>,\n      ],\n    },\n  ];\n  return (\n    <Projects\n      title=\"Design Systems @ Blend\"\n      date=\"November 29th, 2020\"\n      summary={summaryText}\n      content={Content}\n    />\n  );\n};\n\nexport default DesignSystemsAtBlend;\n","export default __webpack_public_path__ + \"static/media/intake_form.6d57026d.png\";","export default __webpack_public_path__ + \"static/media/prototypingWithFidelityInMind.3a8654c9.png\";","export default __webpack_public_path__ + \"static/media/Prototyping_with_functional_fidelity_in_mind.62352503.pdf\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport accordion_tron from '../../assets/images/projects/intuit/accordion_tron.gif';\nimport OTMBanner from '../../assets/images/projects/OTM/OTMBanner.png';\nimport OTMProtopie from '../../assets/images/projects/OTM/OTMProtopie.png';\nimport intake_form from '../../assets/images/projects/misc/intake_form.png';\nimport prototypingWithFidelityInMind from '../../assets/images/projects/misc/prototypingWithFidelityInMind.png';\nimport prototypingWithFidelityInMindPDF from '../../assets/misc/Prototyping_with_functional_fidelity_in_mind.pdf';\nimport { Text } from '../../components/text/text.component';\nimport { Link } from 'react-router-dom';\n\nexport const PrototypingAtBlend = () => {\n  const bankerProto = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://cb-banker-v1.netlify.app/'}\n    >\n      <Text\n        size=\"link-1\"\n        text=\"deposit account prototype for bankers to user test\"\n      />\n    </a>\n  );\n\n  const prototypingPDF = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={prototypingWithFidelityInMindPDF}\n    >\n      <Text size=\"link-1\" text=\"webinar\" />\n    </a>\n  );\n  const IDSAccordion = (\n    <Link className=\"action-link\" to=\"/IDSAccordion\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"accordion component for Intuit design system\" />\n    </Link>\n  );\n  const OTM = (\n    <Link className=\"action-link\" to=\"/OTM\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"One Tap Mobile (OTM)\" />\n    </Link>\n  );\n  const OTMProtopieLink = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href=\"https://cloud.protopie.io/p/390140da1d\"\n    >\n      <Text size=\"link-1\" text=\"user study for OTM\" />\n    </a>\n  );\n  const WaitTaskV2 = (\n    <Link className=\"action-link\" to=\"/WaitTaskV2\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"Wait Task V2\" />\n    </Link>\n  );\n  const summaryText = (\n    <div>\n      For the last half of college, I was really interested in the prototyping\n      space while I was completing my double major in Human Computer\n      Interaction. I did enjoy creating responsive websites and creating web\n      applications, but I wanted to focus on creating high fidelity prototypes.\n      I thought the space was super new, and I heard about Framer Classic, but\n      never got a chance to try it until much much later. Throughout most of my\n      classes, I was exposed to either click through prototyping tools like\n      InVision or simply just slapping together an html, css, javascript/jquery\n      application that served as a prototype, in which I was quite accustomed\n      to. I found it hard to find a role as a ‘prototyper’ right out of college\n      since most of the roles that were available to me at the time were ‘UI/UX\n      designer’ or ‘software engineer.’ It’s only until the more recent years in\n      which I have started to see and learn more about the design technologist\n      role. I thus made a conscious decision to become a software engineer with\n      the hopes of getting professional and industry experience creating UIs\n      with ReactJS. I felt that if I had a stronger technical background, it\n      would help me become a better designer. If I know how something is made or\n      how certain technical limitations impact design, I felt that I could then\n      do something related to product design, which would then entail\n      prototyping. As you can see, there were a few steps there, and I would say\n      for about a year, I was dead set on becoming a product designer. I spent\n      days shadowing product designers inside and outside of work, seeking\n      mentorship, and just preparing my portfolio so that I could get my foot in\n      the door.\n    </div>\n  );\n\n  const Content = [\n    {\n      section: \"Putting prototyping on Blend's radar\",\n      content: [\n        <ImageWithCaption\n          src={accordion_tron}\n          caption=\"The Intuit Design Systems Accordion seen in Payments Onboarding with Chase in production\"\n        />,\n        <div>\n          During my time at Intuit, I found an opportunity to prototype: I was\n          working on an {IDSAccordion} and when I was given the mocks from\n          design, all I saw was the ‘expanded’ and ‘collapsed’ states. My\n          initial thought was to sit with the designers and just ask all the\n          questions I could think of. What happens in between the\n          expand/collapse states? How long is the transition? What fades in and\n          what fades out? So on and so forth. I felt that this would be a good\n          time to try out Framer Classic since that was the ‘best’ tool on the\n          market out there, and I wanted to mock the experience before coding\n          it. It proved to be helpful since I could figure out all the\n          transitions, timings, and overall experience in Framer Classic while\n          not having to code the real thing. I could easily change values as\n          well to workshop the interaction in real time with the designers. This\n          process of working collaboratively with designers and rapidly\n          iterating on an interaction got me excited, and I wanted to do more of\n          that.\n        </div>,\n        <div>\n          Fast forward a year, I embarked on my journey as a design technologist\n          at Blend. What happened to my goal to switch to becoming a product\n          designer? Well, I interviewed at Blend as a product designer, but I\n          wasn’t quite there yet in terms of experience. I was very interested\n          in prototyping as a function and just building concepts fast. To\n          blend, I was able to add immediate value by helping out and building\n          prototypes and demos. That sounded amazing to me, and despite going\n          into a role that I knew nothing about going into it, I don’t regret\n          any of that decision. I had no idea what design technology was at the\n          time, and quite frankly, I wasn’t sure if that was the right step for\n          me. However, I saw that I was given a chance to work on projects that\n          I could use my coding background to help iterate and flesh out\n          designs, so I decided to take the role and try it out.\n        </div>,\n        <div>\n          At Blend, my first few months were spent just exploring tooling for\n          prototyping. I wasn’t quite convinced that coding a prototype would be\n          the best or optimal option since tools like Framer Classic existed and\n          at that time Framer X just launched. I was super excited to try out\n          Framer X since leverages and incorporates ReactJS to make high\n          fidelity prototypes like this {bankerProto}. However, I found it to be\n          quite painful to use due to the lack of documentation and lack of a\n          few key features: passing data between screens, state management,\n          automatic page transitions (on load or with a setTimeout), and much\n          much much more. Despite the massive disappointment, I always kept\n          FramerX in the back of my head and tried to give it a chance over the\n          years. However, it ultimately morphed into a tool that I felt that did\n          not meet my needs.\n        </div>,\n        <ImageWithCaption src={OTMBanner} caption=\"One-tap Mobile aka OTM\" />,\n        <div>\n          My main goal for prototyping remained the same regardless of if I used\n          FramerX, code, or another tool like ProtoPie (in which I will talk\n          about later): I really wanted to leverage code components to create\n          prototypes of the highest fidelity without having to remake or fake\n          prod level components with their interactions. I felt that high\n          fidelity prototypes should feel as real as possible, and I wanted to\n          use my technical background to make that a reality. I was able to\n          produce various prototypes like {OTM}, a prototype used for sales\n          demos and user tests for Blend’s one tap mortgage pre-approval\n          solution, or {WaitTaskV2}, an interactive loading state.\n        </div>,\n        <div>\n          Over time, I was able to leverage Blend’s component library (in code)\n          to create prototypes quickly. When I first started out, there was only\n          a button, textbox, and a few other trivial components available in\n          consumer-components, one of blend’s component libraries. I found that\n          I needed at least a button, textinput, radio, and checkbox in order to\n          make flows quickly in code. Thus, I hacked together some components\n          from the monolith to have such components readily available in my\n          prototypes. I was able to demonstrate a fast turn-around time for\n          coded prototypes, in a matter of one or two weeks on average. I found\n          that I excelled in working with designers to workshop ideas, call out\n          inconsistencies within designs, and encourage designers to think\n          beyond static screens.\n        </div>,\n        <div>\n          I was able to create a framework to make mobile web prototypes faster\n          as well, mainly for my own sake, but also if anyone else came around\n          to wanting to prototype with code, there was a repo readily available\n          for consumption. The framework existed as just a simple git repo that\n          I could clone whenever I wanted to make a new prototype in which I\n          would deploy separately on netlify: that way, I could keep maintaining\n          or make changes when necessary. The framework included my basic\n          components that I used regularly, support to change theme/color and\n          branding easier for sales demos, have webpack and sass configured so I\n          didn’t have to run create react app every single time. I was also able\n          to leverage lottie for various loading states present in some of the\n          prototypes I worked with. These prototypes were meant to be as real as\n          possible so the use of Lottie helped us create and iterate on\n          animations faster. Furthermore, the inclusion of code made data input\n          as well as data processing on each prototype much much easier.\n        </div>,\n        <div>\n          Over the course of a couple of quarters of heads down work, I was also\n          able to establish prototyping as a part of the design workflow. My\n          focus was to essentially help the design team prototype flows and\n          incorporate prototypes into their workflow (given the right scope and\n          resourcing). Through that, I was able to establish a process for\n          working with designers for prototyping as well as taking requests from\n          cross functional partners such as product managers and people from the\n          business development side of things.\n        </div>,\n        <ImageWithCaption\n          src={intake_form}\n          caption=\"Prototyping intake form for our XFN partners\"\n        />,\n        <div>\n          My manager and I created an intake form for both XFN partners as well\n          as designers to send in prototyping requests when needed. On top of\n          that, we were able to establish a pre-read for XFN partners to\n          thoroughly think through their asks while considering time/cost\n          tradeoffs as well as having an understanding of what fidelity\n          prototypes and solutions we have available. One of the biggest points\n          of contention was that I was the only prototyping resource for Blend,\n          so it wasn’t viable to have me code all of my prototypes.\n        </div>,\n        <div>\n          Having a pipeline/process as to what projects I prototype for as well\n          as helping designers and XFN members understand what solutions we have\n          and what tradeoffs come along with each solution really helped my job.\n          We found that this process helped our partners identify what kind of\n          prototype they desired (click through, coded, etc), what the timeline\n          was, and what the purpose of the prototype was. We found that there\n          were typically two buckets of prototypes: sales demos and prototypes\n          for user testing. We were thus able to not only create high fidelity\n          prototypes in a quick manner but also educate the design team as well\n          as the company about what the capabilities of prototyping are as well\n          as what kinds of solutions and prototypes are available.\n        </div>,\n        <ImageWithCaption\n          src={prototypingWithFidelityInMind}\n          white\n          caption=\"After participating in the seminar, I had a chance to share my learnings with the Product Design team.\"\n        />,\n        <div>\n          From there, I felt that I wanted to empower the design team and help\n          make prototyping a bit more self serve. I had an opportunity to listen\n          in on a {prototypingPDF} created by the Nielsen Norman Group called\n          'Prototyping with Functional Fidelity in Mind'. The goal was to\n          ultimately help me learn more about prototyping and how to refine and\n          improve my process when it comes to working with partners for a\n          prototype. However, I felt that this could be a great way to further\n          educate the design team as to how to aid the with the collaboration\n          process when it comes to requesting specific prototypes. Through the\n          webinar, I was able to share out with the team that we need to\n          consider visual, content, and functional fidelity when considering\n          creating a prototype. Furthermore, the goal was to educate designers\n          the types of trade offs when it comes to using certain methods or\n          tools for prototyping as well as characteristics of what a high\n          functional fidelity prototype entails.\n        </div>,\n        <ImageWithCaption\n          src={OTMProtopie}\n          white\n          caption=\"Piloting Protopie for One Tap Mobile (OTM) to prototype sign-in and prefill experiences\"\n        />,\n        <div>\n          Beyond the seminar, my goal for prototyping at blend was to also help\n          empower product designers to prototype on their own. Continuing my\n          explorations with prototyping tools, I came across ProtoPie, and I\n          found it to be a fairly decent no-code tool to help designers create\n          prototypes with high functional fidelity. ProtoPie ultimately lets you\n          create/store variables and have textInput fields and custom inputs\n          without having to write a single line of code. I thus tried using\n          ProtoPie for a {OTMProtopieLink} and found it quite straightforward to\n          use. From that, my manager and I set out to pilot ProtoPie for the\n          product design team as we found it to be a good avenue for product\n          designers at Blend to try and prototype on their own. If they required\n          help, I could help consult, and that would thus free up my time to\n          create more intricate or complex prototypes via code. We fundamentally\n          felt that designers should not be required to code, but we could at\n          least help designers get closer to producing prototypes without having\n          to code. We strongly encourage designers to know how to code, but\n          given the nature of working at a lively startup, we don’t always have\n          the time to do so. With ProtoPie, I found that it checked off all the\n          features that FramerX required as well as abstracting programming\n          concepts to make it more accessible.\n        </div>,\n        <div>\n          The introduction of ProtoPIe has served to be a quick and easy way to\n          test interactions for the product design team and serves as a tangible\n          way for the design technology team to help bring prototyping on\n          Blend’s radar beyond my skills. That’s about it for my prototyping\n          journey at Blend for now! I’ve thus moved on to working on design\n          systems at Blend, and have taken a small break from prototyping at\n          this time. Have questions? Drop me a line! I’m more than happy to\n          chat.\n        </div>,\n      ],\n    },\n  ];\n  return (\n    <Projects\n      title=\"Prototyping @ Blend\"\n      date=\"January 6th, 2021\"\n      summary={summaryText}\n      content={Content}\n    />\n  );\n};\n\nexport default PrototypingAtBlend;\n","export default __webpack_public_path__ + \"static/media/SR_cover.ff3f55d9.png\";","export default __webpack_public_path__ + \"static/media/roll_strat.30b11b77.png\";","export default __webpack_public_path__ + \"static/media/roll_strat_mobile.5682f52e.png\";","export default __webpack_public_path__ + \"static/media/colors.369a5bb3.png\";","export default __webpack_public_path__ + \"static/media/landing_info.5463840c.png\";","export default __webpack_public_path__ + \"static/media/roulette_form_inputs.73d31408.png\";","export default __webpack_public_path__ + \"static/media/typography.48f38ab8.png\";","import React from 'react';\nimport Projects from '../../../components/templates/prose/prose.component';\nimport { Text } from '../../../components/text/text.component';\nimport { List } from '../../../components/list/list.component';\nimport { ImageWithCaption } from '../../../components/ImageWithCaption/ImageWithCaption.component';\nimport SR_cover from '../../../assets/images/projects/StratRoulette/SR_cover.png';\nimport roll_strat from '../../../assets/images/projects/StratRoulette/roll_strat.png';\nimport roll_strat_mobile from '../../../assets/images/projects/StratRoulette/roll_strat_mobile.png';\nimport colors from '../../../assets/images/projects/StratRoulette/colors.png';\nimport landing_info from '../../../assets/images/projects/StratRoulette/landing_info.png';\nimport roulette_form_inputs from '../../../assets/images/projects/StratRoulette/roulette_form_inputs.png';\nimport typography from '../../../assets/images/projects/StratRoulette/typography.png';\nimport SRLegacy_alpha from '../../../assets/images/projects/SRLegacy/SRLegacy_alpha.png';\nimport { Link } from 'react-router-dom';\n\nexport const StratRoulette = () => {\n  const Voyage = (\n    <a\n      className=\"action-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={'https://vj-type.com/family/voyage/'}\n    >\n      <Text size=\"link-1\" text=\"we used Voyage\" />\n    </a>\n  );\n  const SRLegacy = (\n    <Link className=\"action-link\" to=\"/SRLegacy\" target=\"_blank\">\n      <Text size=\"link-1\" text=\"a previous attempt in 2017 was made\" />\n    </Link>\n  );\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={SR_cover}\n        caption=\"StratRoulette is a platform where users can submit strats to a community for various competitive e-sports games like CounterStrike, Valorant, and more.\"\n      />\n      StratRoulette (SR) has been a side project that I've been working on with\n      my good friend Justin Chen. SR has been a meaningful success for Justin\n      with it's first launch back in 2013, and we've been working on it during\n      the start of the COVID-19 pandemic to redesign and re-haul the whole UI as\n      well as backend. I serve as design lead but my main focus is still design\n      systems, where I create and build the component library.\n    </div>\n  );\n\n  const StratRouletteContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Designed and implemented components for design system',\n            'Designed all the flows and interactions of the app (mobile + desktop)',\n            'Created logo, brand identity, and landing page',\n            'Main driver of product and design strategy',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <ImageWithCaption\n          src={SRLegacy_alpha}\n          caption=\"StratRoulette in it's early days\"\n        />,\n        <div>\n          SR has been around since 2013, and it was in dire need of a design\n          rehaul. A {SRLegacy}, but failed due to various reasons, but when the\n          COVID-19 pandemic hit as well as a few years of experience gained, we\n          all found a huge amount of time in our hands, and we thus decided to\n          commit to not only a redesign of the application, but also improve and\n          scale the app.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          With my background and passion in design systems, I wanted to focus on\n          creating a component library from the ground up. I also wanted to use\n          SR as an outlet for me to work on something a bit more creative and\n          with full autonomy within the design realm. I really just wanted an\n          excuse to pick a sick typeface, {Voyage}, pick out a few colors, and\n          build a bunch of components while making all the design decisions.\n        </div>,\n        <div>\n          Basically, I wanted to just build an application with ui elements that\n          I found interesting from work or just randomly browsing the internet.\n          A big part of this was also to just revisit my work from 2017, and\n          really just “do better” because, oh boy, it was really really bad. I\n          didn’t know a single thing about line height, font size, spacing,\n          sizing, and much more. I really wanted to apply all the things that I\n          learned from design systems and apply it to SR as an exercise for me\n          to grow. I really wanted to just build something from the ground up on\n          both design and code to really get a feel of what it’s like to build\n          and maintain a system. I really wanted to use this as a learning\n          experience for me with the hopes of me leveraging this experience and\n          learnings for work.\n        </div>,\n        <div>\n          I really wanted to hone in on the visual language for SR and just run\n          wild with whatever I wanted to do. More importantly, I was able to\n          then use those components to design screens for both mobile and\n          desktop audiences. I was able to produce not only a design system but\n          also a brand and a whole application.\n        </div>,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <div>\n          The first few tasks for SR were free-form since I got a start at\n          revamping the project before some of the team members joined.\n          Therefore, I first started out with creating the logo since I really\n          did not like the old one. Furthermore, I wanted to pick out the\n          branding and design language of the application. During that time, I\n          was working at Blend, and most of Blend’s application was white-label.\n          Thus, I wanted to be able to pick out colors, typeface, and other\n          design elements.\n        </div>,\n        <div>\n          Once the colors, typeface, and design elements were figured out, I\n          decided to create a logo. I tried to stick with something simple with\n          the thought of having an icon that served as a monogram with a branded\n          color while also making considerations for monochrome. As for type, I\n          really just fell in love with Voyage, and was really into the trend of\n          having a serif header/display font. Color was really just arbitrary,\n          but I was feeling a light purple at the time, and I certainly did not\n          want a blue color since most fin-tech startups use blue. Red, green,\n          and yellow, really did not vibe with me since they reflect error,\n          success, and warning colors respectively.\n        </div>,\n        <ImageWithCaption\n          src={colors}\n          caption=\"StratRoulette's color system\"\n        />,\n        <ImageWithCaption\n          src={typography}\n          caption=\"StratRoulette's type ramp showcasing Voyage for Display text Inter for body and subheaders\"\n        />,\n        <ImageWithCaption\n          src={roulette_form_inputs}\n          caption=\"Roulette design system's form inputs.\"\n        />,\n        <div>\n          For most of the project, SR’s design and product decisions were driven\n          by Justin and me. Justin created various product specs, and during the\n          design phase, we would discuss features and how they would work.\n          Features would entail supporting and improving legacy features and\n          also new features to improve the overall application experience.\n          Before designing screens/flows, I first created a base set of\n          components\n        </div>,\n\n        <div>\n          I explored concepts for the type ramp since I knew that the main focus\n          of the application was the strat card. This was the whole basis of SR\n          - provide a user a ‘strat’ to play for a game. Additionally, I was\n          able to explore concepts for the brand page as well as basic input\n          components to land on a type ramp. Colors were quite arbitrary since I\n          made the decision to keep the application simple and only have one\n          primary color and eventually adding an accent color. Neutral colors\n          were selected and checked for contrast to meet AA WCAG compliance. We\n          decided to go with the standard 8px grid to create most of our\n          elements.\n        </div>,\n\n        <div>\n          Once the fundamental design elements were created, I then started\n          designing basic inputs like buttons, radio, and others to thus have\n          some components to work with when designing flows. I figured that it’d\n          be much faster to design screens when I had at least the design tokens\n          and a few components figured out as opposed to designing both\n          components and flows at the same time.\n        </div>,\n        <ImageWithCaption\n          src={landing_info}\n          caption=\"StratRoulette's info section on the landing page.\"\n        />,\n        <div>\n          Prior to working on the core product, I also took some time to work on\n          the landing page because I was super inspired company landing pages\n          and I just wanted to run wild with a concept. I really just wanted to\n          make something simple yet aesthetic in my own way. I was able to\n          design and implement the brand page, and it was a blast to run wild on\n          the design and code fronts.\n        </div>,\n        <ImageWithCaption\n          src={roll_strat}\n          caption=\"StratRoulette's roll strat screen displaying a strat card.\"\n        />,\n        <ImageWithCaption\n          src={roll_strat_mobile}\n          caption=\"StratRoulette's roll strat page on mobile\"\n        />,\n        <div>\n          After the brand page, I focused solely on designing flows ranging from\n          logging in to rolling a strat. Alongside designing, I also began\n          developing components for the design system. We tried to parallelize\n          designing of features as well as coding components so that we could\n          build pages faster later. Therefore, we set out features each week\n          that we wanted to tackle, and beforehand, we would call out what\n          components needed to be implemented before the feature could then be\n          developed. Additionally, we added the design tokens in code and made\n          sure those were ready before we could create components. Each feature\n          was then designed, components were coded and added to storybook, and\n          then pages were coded.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"StratRoulette\"\n      date=\"March 2020 - Present\"\n      summary={summaryText}\n      content={StratRouletteContent}\n    />\n  );\n};\n\nexport default StratRoulette;\n","export default __webpack_public_path__ + \"static/media/Alchemy_cover.77b928c2.png\";","export default __webpack_public_path__ + \"static/media/Alchemy_foundations.61e7cf01.png\";","export default __webpack_public_path__ + \"static/media/Alchemy_theming.6acde987.png\";","export default __webpack_public_path__ + \"static/media/Alchemy_checkbox.808f8e52.png\";","export default __webpack_public_path__ + \"static/media/Alchemy_reference_site_color.ca3b22f7.svg\";","export default __webpack_public_path__ + \"static/media/Alchemy_reference_site_component.79746a6c.svg\";","export default __webpack_public_path__ + \"static/media/Alchemy_theme_object.1c3e63ed.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport Alchemy_cover from '../../assets/images/projects/Alchemy/Alchemy_cover.png';\nimport Alchemy_foundations from '../../assets/images/projects/Alchemy/Alchemy_foundations.png';\nimport Alchemy_theming from '../../assets/images/projects/Alchemy/Alchemy_theming.png';\nimport Alchemy_checkbox from '../../assets/images/projects/Alchemy/Alchemy_checkbox.png';\nimport Alchemy_reference_site_color from '../../assets/images/projects/Alchemy/Alchemy_reference_site_color.svg';\nimport Alchemy_reference_site_component from '../../assets/images/projects/Alchemy/Alchemy_reference_site_component.svg';\nimport Alchemy_theme_object from '../../assets/images/projects/Alchemy/Alchemy_theme_object.png';\n\n// import Checkbox_documentation from '../../assets/images/projects/Alchemy/Checkbox_documentation.pdf';\n// import { Text } from '../../components/text/text.component';\n\nexport const Alchemy = () => {\n  // const componentDocumentation = (\n  //   <a\n  //     className=\"action-link\"\n  //     target=\"_blank\"\n  //     rel=\"noreferrer\"\n  //     href={Checkbox_documentation}\n  //   >\n  //     <Text size=\"link-1\" text=\"component documentation\" />\n  //   </a>\n  // );\n\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        white\n        src={Alchemy_cover}\n        caption=\"Alchemy brand logo\"\n      />\n      Alchemy design system is an ongoing design system effort at Blend to\n      create a unified design system that can be extensively customized and\n      themed to be utilized in Blend’s various product families. Alchemy is the\n      product of numerous attempts to establish design systems at Blend, thus\n      leveraging all of Blend’s learnings and past attempts. Alchemy’s main goal\n      is to act as one sole component library that both enterprise and consumer\n      products can use to design and build with. The Alchemy design system is\n      unique due to the fact that it takes on a “system for systems” approach\n      since it leverages theming in order to produce visually distinct and\n      unique components that basically act as one to many design systems.\n    </div>\n  );\n\n  const AlchemyContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Designed components with theming and accessibility in mind',\n            'Created documentation for such components',\n            'Synthesized a vision for a themeable design system to meet Blend’s product needs',\n            'Collaborated with the brand team to put together concepts for a reference site',\n            'Collaborated with Engineering to establish foundations for theming architecture',\n            'Established design tokens: typography, colors, icons, and basic grid structure',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <ImageWithCaption\n          white\n          src={Alchemy_foundations}\n          caption=\"A brief overview of Alchemy's foundations\"\n        />,\n        <div>\n          The problem at hand was that Blend was facing two issues: there were\n          separate component libraries for each product and that some products\n          do share many components from different libraries. On top of that,\n          Blend’s consumer products are primarily white labeled, meaning the\n          design system carries no branding since the branding is derived from\n          the customer’s branding. For example, Wells Fargo’s Mortgage\n          application via Blend takes on the Wells Fargo brand colors.\n        </div>,\n        <div>\n          However, with the growth of the Consumer banking platform as well as\n          customer asks, Blend has been exploring ways to let customers\n          customize their visual identity more within the Blend application.\n          Thus, Alchemy’s first goal is to unify all the fragmented design\n          libraries and also establish a shared language amongst design and\n          engineering. The second goal is to support theming in a way that\n          Alchemy can support drastically different visual styles. The implicit\n          goal is also to then be able to support theming so that our customers\n          can then create their own theme so that their application experience\n          can be tailored to a customer’s brand.\n        </div>,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <ImageWithCaption\n          white\n          src={Alchemy_theme_object}\n          caption=\"An example of Alchemy's theme object with three tiers: primitives, semantics, and component level overrides.\"\n        />,\n        <ImageWithCaption\n          white\n          src={Alchemy_theming}\n          caption=\"Alchemy supports multiple design languages with the use of theming.\"\n        />,\n        <ImageWithCaption\n          src={Alchemy_checkbox}\n          caption=\"Alchemy's checkbox component with the enterprise theme.\"\n        />,\n        <ImageWithCaption\n          src={Alchemy_reference_site_color}\n          caption=\"Alchemy's Color page mock for the reference site\"\n        />,\n        <ImageWithCaption\n          src={Alchemy_reference_site_component}\n          caption=\"Alchemy's component documentation mock for the reference site\"\n        />,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Alchemy\"\n      date=\"April 2020 - Present\"\n      summary={summaryText}\n      content={AlchemyContent}\n    />\n  );\n};\n\nexport default Alchemy;\n","export default __webpack_public_path__ + \"static/media/ExerciseStatus1.36da35b9.png\";","export default __webpack_public_path__ + \"static/media/ExerciseStatus2.ff0233ca.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport ExerciseStatus1 from '../../assets/images/projects/ExerciseStatus/ExerciseStatus1.png';\nimport ExerciseStatus2 from '../../assets/images/projects/ExerciseStatus/ExerciseStatus2.png';\n\nconst ExerciseStatusProto = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://exercise-status-poc.netlify.app/'}\n  >\n    <Text size=\"link-1\" text=\"prototype\" />\n  </a>\n);\n\nexport const ExerciseStatus = () => {\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={ExerciseStatus1}\n        white\n        caption=\"A redesigned 'tracker-esque' paradigm for displaying exericse status\"\n      />\n      A common frustration that user's have with Carta is how slow the process\n      is to exercise an option grant. Exercising options can take roughly a week\n      and is a multistep process: user submits exercise request, Admin\n      approves/rejects, payment, certificate issued, and lastly user signs\n      certificate. The task was to revamp the exercise status for more\n      transparency behind the status as opposed to simply saying \"pending\" or\n      \"cancelled.\"\n    </div>\n  );\n\n  const ExerciseStatusContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'Built a dynamic and end to end hi-fidelity prototype',\n            'Explored ways to customize the Tracker component provided by the design system',\n            'Collaborated with product designer to bring vision to life',\n            'Provided feedback around error states and edge cases',\n            'Provided ui feedback around tracker content and typography',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          The main problem was that the current exercise flow would just show a\n          status as \"Pending, Cancelled, or Completed\" for an ongoing exercise\n          request. Additionally, if the exercise was cancelled, there would be\n          no information presented in the UI, and thus the user would have to\n          email their admin for further details. Thus, there was a desire to\n          improve this experience with the concept of a tracker while still\n          considering the constraints of the app.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <ImageWithCaption\n          src={ExerciseStatus2}\n          white\n          caption=\"A view of exercise history of a given grant\"\n        />,\n        <div>\n          A {ExerciseStatusProto} (pw: 'abby')was thus created so that to test\n          compatibility and feasibility with the ink design system. We needed to\n          ensure that we as a design team could confidently build the existing\n          experience with the Tracker component made by the ink team. This\n          prototype served as a framework to test out microinteractions as well\n          as a way to ensure edge cases for every status and information was\n          properly mapped out to spec.\n        </div>,\n        <div>\n          Moreover, the prototype served as an avenue where design could lead\n          with research and test some findings with the prototype itself. As the\n          prototype finished, the project was slated to be scoped into the Q4\n          roadmap.\n        </div>,\n      ],\n    },\n  ];\n  return (\n    <Projects\n      title=\"Carta Exercise Status Prototype\"\n      date=\"June 2022\"\n      summary={summaryText}\n      content={ExerciseStatusContent}\n    />\n  );\n};\n\nexport default ExerciseStatus;\n","export default __webpack_public_path__ + \"static/media/Welcome.74957ed6.png\";","export default __webpack_public_path__ + \"static/media/TwoFactor.3871b485.png\";","export default __webpack_public_path__ + \"static/media/PersonalInfo.0e8f6e42.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { Text } from '../../components/text/text.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport Welcome from '../../assets/images/projects/EmployeeOnboarding/Welcome.png';\nimport TwoFactor from '../../assets/images/projects/EmployeeOnboarding/TwoFactor.png';\nimport PersonalInfo from '../../assets/images/projects/EmployeeOnboarding/PersonalInfo.png';\n\nconst EmployeeOnboardingProto = (\n  <a\n    className=\"action-link\"\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href={'https://employee-onboarding-poc-1.netlify.app/'}\n  >\n    <Text size=\"link-1\" text=\"here\" />\n  </a>\n);\n\nexport const EmployeeOnboarding = () => {\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={Welcome}\n        white\n        caption=\"Employee onboarding V2, now with a 10% improvement in signups\"\n      />\n      Prototyping played a crucial role in the design of the new onboarding\n      flow. Three prototypes were created so that\n    </div>\n  );\n\n  const ExerciseStatusContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'Built a total of 3 end to end hi-fidelity prototypes',\n            'Leveraged existing ink componets while providing suggestions for the UI',\n            'Pixel perfect attention to detail to call out one-offs or to clean up design spec',\n            'Validated designs through user testing as well as coding functionality',\n            'Design QA-ed for release',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <div>\n          As an employee accepts their option grant, at a certain point they\n          will most likely exercise to realize their equity. However they were\n          faced with some obstacles when initiating their exercise request: they\n          needed to provide more info as well as set up 2FA. Thus, a prototype\n          was needed to help test amongst users variations of the flow to reach\n          the most optimal experience.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <div>\n          Like most prototypes, one main goal of prototyping the onboarding flow\n          was to test feasibility of the front end and to reduce the creation of\n          new components. Additionally, the prototype served as an avenue to\n          confidently decision make around where to surface equity education as\n          well as gauge the impact of 2FA being part of the onboarding flow.\n        </div>,\n\n        <div>Three prototypes were created:</div>,\n\n        <List\n          ordered\n          size=\"body-1\"\n          listItems={[\n            'option 1: 2FA → form (including equity education) → success,',\n            'option 2: NO 2FA → form (including equity education) → success,',\n            'option 3: 2FA → form → success → equity education,',\n          ]}\n        ></List>,\n\n        <div>\n          You can view option 1 of the prototypes {EmployeeOnboardingProto} (pw:\n          'abby').\n        </div>,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <ImageWithCaption\n          src={TwoFactor}\n          white\n          caption=\"Login screens were also mocked out for testing to simulate a real signup flow with 2FA setup before the user fills out their information\"\n        />,\n        <ImageWithCaption\n          src={PersonalInfo}\n          white\n          caption=\"The onboarding flow itself happens after account creation + 2FA, and it consists of 3 steps: personal info, address, and grant acceptance\"\n        />,\n      ],\n    },\n  ];\n  return (\n    <Projects\n      title=\"Carta Employee Onboarding Prototype\"\n      date=\"March 2022\"\n      summary={summaryText}\n      content={ExerciseStatusContent}\n    />\n  );\n};\n\nexport default EmployeeOnboarding;\n","export default __webpack_public_path__ + \"static/media/base_textinput.23c87b2c.png\";","export default __webpack_public_path__ + \"static/media/figma_variant_changes.6a1e085f.png\";","export default __webpack_public_path__ + \"static/media/Modal_Audit.f5d17b52.png\";","export default __webpack_public_path__ + \"static/media/modal_scoping.daa5507b.png\";","export default __webpack_public_path__ + \"static/media/TextInputs.e51e4bd9.png\";","export default __webpack_public_path__ + \"static/media/vesta_icons.288875a4.png\";","export default __webpack_public_path__ + \"static/media/Modal.2bc5165a.png\";","export default __webpack_public_path__ + \"static/media/modal_workaround.6ed3b25c.png\";","export default __webpack_public_path__ + \"static/media/Cover.c55ac936.png\";","export default __webpack_public_path__ + \"static/media/Subcomponents.fc2a7fb8.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport base_textinput from '../../assets/images/projects/Vesta/base_textinput.png';\nimport figma_variant_changes from '../../assets/images/projects/Vesta/figma_variant_changes.png';\nimport Modal_Audit from '../../assets/images/projects/Vesta/Modal_Audit.png';\nimport modal_scoping from '../../assets/images/projects/Vesta/modal_scoping.png';\nimport TextInputs from '../../assets/images/projects/Vesta/TextInputs.png';\nimport vesta_icons from '../../assets/images/projects/Vesta/vesta_icons.png';\nimport Modal from '../../assets/images/projects/Vesta/Modal.png';\nimport modal_workaround from '../../assets/images/projects/Vesta/modal_workaround.png';\nimport Cover from '../../assets/images/projects/Vesta/Cover.png';\nimport ModalSubcomponents from '../../assets/images/projects/Vesta/Subcomponents.png';\n\nexport const Vesta = () => {\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={Cover}\n        white\n        caption=\"Vesta's ui-kit cover in Figma, with a small legend for progress per page\"\n      />\n      Vesta is founded by ex-Blend folks, and I was fortunate enough to help\n      work on creating Vesta's very first design system! Luckily, there were\n      already some visual assets figured out like colors, type, and icons, but\n      they needed some organization so that they could be used to flesh out the\n      rest of the components. My time at Vesta so far has been to flesh out the\n      'v1' of the design system so that the rest of the product designers and\n      frontend engineers can focus on building their product faster.\n    </div>\n  );\n\n  const VestaContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Audited product flows to document patterns',\n            'Created and maintined design system from the ground up: starting from basic icons, typography, colors, and grid',\n            'Collaborated weekly with product design team for feedback and presentation of components',\n            'Created inputs, modals, navigational elements, and more',\n            'Documented patterns and working best practices within the figma library',\n            'Collaborated with Engineering to ensure React prop alignemnt and FE best practices',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Process',\n      content: [\n        <ImageWithCaption\n          src={vesta_icons}\n          caption=\"Vesta's icons are simply using material ui's vast list of icons, but the icon library is simply a subset that is maintained in house for flexibility. Size variants stem from an 8pt half grid.\"\n        />,\n        <ImageWithCaption\n          src={figma_variant_changes}\n          caption=\"Figma changed up their variant organization UI, so a learning here is not to put every icon as a variant of an Icon component, despite that's how it's represented in the code for some codebases. Thus, here's why each icon is it's own component in Figma, but it would be rendered as <Icon type={$name}/>\"\n        />,\n        <ImageWithCaption\n          src={base_textinput}\n          caption=\"a base text input was created so that it could be extended to provide a text mask, an icon, or other props. This would help unify some of the visually similar input controls like text inputs, dropdowns, etc.\"\n        />,\n        <ImageWithCaption\n          src={TextInputs}\n          caption=\"Text inputs with other variants. Note: each variant exists as it's own component, but they are mainly just a pre-defined version of the base_input\"\n        />,\n        <ImageWithCaption\n          src={Modal_Audit}\n          caption=\"Like most components, an audit would be done document existing patterns in the product - pictured here is the audit for Modals\"\n        />,\n        <ImageWithCaption\n          src={modal_scoping}\n          caption=\"This is a bit of a brainstorm screen, but it documents how I think about creating subcomponents for organisms like a Modal\"\n        />,\n        <ImageWithCaption\n          white\n          src={ModalSubcomponents}\n          caption=\"Subcomponents to create a base_modal to support the modal variants while being set up for instance swapping for the modalContent\"\n        />,\n        <ImageWithCaption\n          src={Modal}\n          caption=\"Taking on the same idea as base_inputs, a base_modal was created so that it could represent different variants of modals showcased above\"\n        />,\n        <ImageWithCaption\n          src={modal_workaround}\n          caption=\"A clever tip that I've discovered while at Carta: local components (within a working file) can be swapped in via the instance swapper to dynamically render content without detaching.\"\n        />,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Vesta\"\n      date=\"March 2022 - August 2022, contract\"\n      summary={summaryText}\n      content={VestaContent}\n    />\n  );\n};\n\nexport default Vesta;\n","export default __webpack_public_path__ + \"static/media/emp_storybook.d7a7529d.jpg\";","export default __webpack_public_path__ + \"static/media/emp_storybook2.6ed1c6e7.jpg\";","export default __webpack_public_path__ + \"static/media/figma_button.32be8d46.jpg\";","export default __webpack_public_path__ + \"static/media/figma_doc.0ac6ccfe.jpg\";","export default __webpack_public_path__ + \"static/media/figma_doc2.ad4270f5.jpg\";","export default __webpack_public_path__ + \"static/media/figma_icons.54fdc7f4.png\";","export default __webpack_public_path__ + \"static/media/emp_storybook1.6a936c55.png\";","export default __webpack_public_path__ + \"static/media/employee_figma.137070f4.png\";","export default __webpack_public_path__ + \"static/media/figma_button_spec.ad80106d.png\";","export default __webpack_public_path__ + \"static/media/figma_doc1.0e115d9b.png\";","export default __webpack_public_path__ + \"static/media/shimmer_doc.b2f6dd00.png\";","export default __webpack_public_path__ + \"static/media/shimmer_doc1.ff2ef79c.png\";","export default __webpack_public_path__ + \"static/media/ink_cover.6338b62b.png\";","export default __webpack_public_path__ + \"static/media/icon_doc.77bf8778.png\";","import React from 'react';\nimport Projects from '../../components/templates/prose/prose.component';\nimport { List } from '../../components/list/list.component';\nimport { ImageWithCaption } from '../../components/ImageWithCaption/ImageWithCaption.component';\nimport emp_storybook from '../../assets/images/projects/Ink/emp_storybook.jpg';\nimport emp_storybook2 from '../../assets/images/projects/Ink/emp_storybook2.jpg';\nimport figma_button from '../../assets/images/projects/Ink/figma_button.jpg';\nimport figma_doc from '../../assets/images/projects/Ink/figma_doc.jpg';\nimport figma_doc2 from '../../assets/images/projects/Ink/figma_doc2.jpg';\nimport figma_icons from '../../assets/images/projects/Ink/figma_icons.png';\nimport emp_storybook1 from '../../assets/images/projects/Ink/emp_storybook1.png';\nimport employee_figma from '../../assets/images/projects/Ink/employee_figma.png';\nimport figma_button_spec from '../../assets/images/projects/Ink/figma_button_spec.png';\nimport figma_doc1 from '../../assets/images/projects/Ink/figma_doc1.png';\nimport shimmer_doc from '../../assets/images/projects/Ink/shimmer_doc.png';\nimport shimmer_doc1 from '../../assets/images/projects/Ink/shimmer_doc1.png';\nimport ink_cover from '../../assets/images/projects/Ink/ink_cover.png';\nimport icon_doc from '../../assets/images/projects/Ink/icon_doc.png';\n\nexport const Ink = () => {\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        src={ink_cover}\n        white\n        caption=\"Ink, Carta's design system\"\n      />\n      During my time at Carta, I had the pleasant opportunity to make an impact\n      on the design system. Taking my experiences from Blend, I was able to help\n      lead the Ink on Figma 'team', which just comprised of one visual designer\n      and a few other DTs to help maintain the library. Every week, I met with\n      the team to break down and assign work for updating the library or helping\n      out with the rebrand effort. As a group, wee set up guidelines for\n      maintaining the library and made sure that it stayed up to date. On top of\n      that, I made numerous contributions to the codebase ranging from helping\n      with the sass to styled-components migration, extending components,\n      updating backstop tests, and improving documentation. Lastly, I drove the\n      creation and adoption of a storybook react framework that came with an\n      optimized webpack config, storybook addons pre-installed, and more to help\n      other DTs or FE engineers adopt storybook for their library/project.\n    </div>\n  );\n\n  const InkContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Active contributor to the ink codebase: refactoring, improvements, documentation',\n            'Led Ink on Figma working group to ensure parity with code and maintain the figma library',\n            'Coordinated releases with code and figma library',\n            'Brought forth PR check to update figma library whenever a DT makes a ui change to the codebase',\n            'Introduced Storybook to the Employee/Shareholder pillar and created a tiered library to house recipes of ink components',\n            'Collaborated with other DTs to share storybook react template',\n            'Created employee-library in figma for designers',\n            'improved UI health for Employee/Shareholder experience by 50%',\n            'Sunsetted all other vestigial and unsupported figma library files',\n          ]}\n        ></List>,\n      ],\n    },\n\n    {\n      section: 'Ink on Figma (figma library)',\n      content: [\n        <ImageWithCaption\n          src={figma_button}\n          white\n          caption=\"Variant matrix of the Button with the rebranded styles\"\n        />,\n        <ImageWithCaption\n          src={figma_button_spec}\n          white\n          caption=\"Button spec for documentation within figma\"\n        />,\n        <ImageWithCaption\n          src={figma_icons}\n          white\n          caption=\"Icons as their own component with size variants\"\n        />,\n        <ImageWithCaption\n          src={icon_doc}\n          white\n          caption=\"Icon size table was added to highlight the icon sizes on the doc site along side the Icon refactor from sass to styled-components\"\n        />,\n        <ImageWithCaption src={figma_doc} white caption=\"Ink on Figma 101\" />,\n        <ImageWithCaption\n          src={figma_doc1}\n          white\n          caption=\"Branching one-pager, to help manage releases. A clean changelog is a healthy changelog\"\n        />,\n        <ImageWithCaption\n          src={figma_doc2}\n          white\n          caption=\"Documentation for a clever work-around to display 'custom' content within Figma components\"\n        />,\n        <ImageWithCaption\n          src={shimmer_doc}\n          white\n          caption=\"Updated the Shimmer component take more responsive values for the 'width' and `height` props instead of a fixed pixel value\"\n        />,\n        <ImageWithCaption\n          src={shimmer_doc1}\n          white\n          caption=\"Shimmer (circle variant) responsiveness and type change for 'props' and 'height' props\"\n        />,\n      ],\n    },\n    {\n      section: 'Storybook template & Employee specific storybook',\n      content: [\n        <div>\n          As Carta scales, there will be the occaisional need for a new\n          component; either as a one-off that isn't supported by the Ink team,\n          or as a recipe of ink components to document a pattern. The\n          introduction of storybook has been proven to be useful since it can\n          act as a place to prototype or develop new components but also\n          showcase patterns within the pillar or even externally. Often times we\n          find ourselves re-configuring the props to a table multiple times, or\n          create the same card over and over again across the 4 products within\n          the Employee org.\n        </div>,\n\n        <div>\n          In conjunction with other DTs at Carta, we were able to create a\n          template that can be easily cloned or replicated for use within the\n          monorepo or for bootstrapped projects.\n        </div>,\n\n        <ImageWithCaption\n          src={emp_storybook}\n          white\n          caption=\"Storybook, for the Employee/Shareholder pillar, to showcase employee specific patterns that use ink components\"\n        />,\n        <ImageWithCaption\n          src={emp_storybook1}\n          white\n          caption=\"Ink, Carta's design system\"\n        />,\n        <ImageWithCaption\n          src={emp_storybook2}\n          white\n          caption=\"Employee (read as 'domain') specific assets\"\n        />,\n        <ImageWithCaption\n          src={employee_figma}\n          white\n          caption=\"Ink, Carta's design system\"\n        />,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Ink\"\n      date=\"October 2021 - September 2022\"\n      summary={summaryText}\n      content={InkContent}\n    />\n  );\n};\n\nexport default Ink;\n","export default __webpack_public_path__ + \"static/media/product_illustrations_blend_site.2155c9c1.png\";","export default __webpack_public_path__ + \"static/media/product_illustrations_components.ce91182f.png\";","export default __webpack_public_path__ + \"static/media/product_illustrations_lottie.4f6af6c2.png\";","export default __webpack_public_path__ + \"static/media/product_illustrations_sample.5ed981c5.png\";","export default __webpack_public_path__ + \"static/media/product_illustrations_type.a5d19f48.png\";","import React from 'react';\nimport Projects from '../../../components/templates/prose/prose.component';\nimport { List } from '../../../components/list/list.component';\nimport { ImageWithCaption } from '../../../components/ImageWithCaption/ImageWithCaption.component';\nimport product_illustrations_blend_site from '../../../assets/images/projects/ProductIllustrations/product_illustrations_blend_site.png';\nimport product_illustrations_components from '../../../assets/images/projects/ProductIllustrations/product_illustrations_components.png';\nimport product_illustrations_lottie from '../../../assets/images/projects/ProductIllustrations/product_illustrations_lottie.png';\nimport product_illustrations_sample from '../../../assets/images/projects/ProductIllustrations/product_illustrations_sample.png';\nimport product_illustrations_type from '../../../assets/images/projects/ProductIllustrations/product_illustrations_type.png';\n\nexport const ProductIllustrations = () => {\n  // const AbstractMigrate = (\n  //   <Link className=\"action-link\" to=\"/AbstractMigrate\" target=\"_blank\">\n  //     <Text size=\"link-1\" text=\"abstract-migrate\" />\n  //   </Link>\n  // );\n  const summaryText = (\n    <div>\n      <ImageWithCaption\n        white\n        src={product_illustrations_blend_site}\n        caption=\"Product Illustrations used in the Blend.com website\"\n      />\n      Product Illustrations in Figma was a project where I helped the Brand\n      design team migrate svg assets from Illustrator to Figma. The hope was\n      that we could leverage Figma variants/components to create product\n      illustrations faster within Figma as opposed to Illustrator. The main\n      gripe was that Illustrator took too long to open and most of our workflow\n      within the Design team was shifting towards Figma. The experiment was also\n      to see if exported product illustrations (as SVG) from Figma would work\n      well with After Effects with Bodymovin (for Lottie).\n    </div>\n  );\n\n  const ProductIllustrationsContent = [\n    {\n      section: 'Responsibilities',\n      content: [\n        <List\n          size=\"body-1\"\n          listItems={[\n            'Migrating SVG assets from Illustrator to Figma',\n            'Consolidating type styles and components',\n            'Assisting and verifying outcomes with the Brand design team',\n          ]}\n        ></List>,\n      ],\n    },\n    {\n      section: 'Problem',\n      content: [\n        <ImageWithCaption\n          white\n          src={product_illustrations_sample}\n          caption=\"A sample product illustration created by the Brand Design team\"\n        />,\n        <div>\n          The main problem was that in order to make a product illustration, we\n          would have to open up a main file in Adobe Illustrator, and copy\n          vector assets to then create an illustratration. Designers would have\n          to copy and paste components within different files in order to create\n          an illustration. Furthermore, type styles were free form and thus had\n          no consistency across multiple product illustrations.\n        </div>,\n      ],\n    },\n    {\n      section: 'Solution & Deliverables',\n      content: [\n        <ImageWithCaption\n          white\n          src={product_illustrations_components}\n          caption=\"An iteration of the product illustration components\"\n        />,\n        <div>\n          The main deliverable on my end was to produce a figma library with all\n          the components. The migration was not the smoothest due to some\n          clipping masks don’t transfer that well from Illustrator to Figma as\n          well as some typographic elements. I tried to export all assets as\n          SVGs and thus importing them within Figma, but eventually had to\n          redraw a good 40% of the assets. This took about a week tops and that\n          took the majority of the project. The rest of my time was spent\n          cleaning up and organizing the components to pilot and help me learn\n          how to leverage Figma Variants, as the feature was recently released.\n        </div>,\n        <ImageWithCaption\n          white\n          src={product_illustrations_type}\n          caption=\"A type ramp for product illustrations\"\n        />,\n        <div>\n          The last two weeks were spent auditing existing product illustrations\n          to formulate a type ramp. There are two types of product illustrations\n          that the brand team makes - consumer or enterprise. I noticed that\n          existing product illustrations had varying type styles, some body text\n          for the same elements would vary from 11px to 17px. Even elements like\n          buttons sometimes had varying font sizes and some were sentence case\n          while others were upper case. Thus, creating some guidelines around\n          type usage would also help designers create illustrations faster\n        </div>,\n        <ImageWithCaption\n          src={product_illustrations_lottie}\n          caption=\"Instruction for exporting product illustrations from Figma to export for Lottie.\"\n        />,\n        <div>\n          Last, I was able to create a few product illustration samples using\n          the new figma library and handed them off to a teammate on the brand\n          team so that they could test out the SVG in Adobe AfterEffects. The\n          design team heavily leverages Lottie for animations, so we wanted to\n          make sure we could create illustrations in Figma that would mesh well\n          with Bodymovin, a plugin used to export animations as JSON files for\n          Lottie to use.\n        </div>,\n      ],\n    },\n  ];\n\n  return (\n    <Projects\n      title=\"Product Illustrations in Figma\"\n      date=\"October 2020\"\n      summary={summaryText}\n      content={ProductIllustrationsContent}\n    />\n  );\n};\n\nexport default ProductIllustrations;\n","import React from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Main } from './pages/Main/Main';\nimport { Photography } from './pages/Photography/Photography';\nimport UnderConstruction from './pages/UnderConstruction/UnderConstruction.component';\nimport NotFound from './pages/NotFound/NotFound.component';\nimport OTM from './pages/Projects/OTM';\nimport IDSAccordion from './pages/Projects/IDSAccordion';\nimport DocUploader from './pages/Projects/old/DocUploader';\nimport SRLegacy from './pages/Projects/old/SRLegacy';\nimport WaitTAskV2 from './pages/Projects/WaitTaskV2';\nimport AbstractMigrate from './pages/Projects/AbstractMigrate';\nimport Sapling from './pages/Projects/Sapling';\nimport Haven from './pages/Projects/Haven';\nimport DesignSystemsAtBlend from './pages/Blog/DesignSystemsAtBlend';\nimport PrototypingAtBlend from './pages/Blog/PrototypingAtBlend';\nimport StratRoulette from './pages/Projects/old/StratRoulette';\nimport Alchemy from './pages/Projects/Alchemy';\nimport ExerciseStatus from './pages/Projects/ExerciseStatus';\nimport EmployeeOnboarding from './pages/Projects/EmployeeOnboarding';\nimport Vesta from './pages/Projects/Vesta';\nimport Ink from './pages/Projects/Ink';\n\nimport ProductIllustrations from './pages/Projects/old/ProductIllustrations';\n\nexport const App = () => {\n  return (\n    <div>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/photography\" component={Photography} />\n          <Route path=\"/underconstruction\" component={UnderConstruction} />\n          <Route path=\"/OTM\" component={OTM} />\n          <Route path=\"/IDSAccordion\" component={IDSAccordion} />\n          <Route path=\"/DocUploader\" component={DocUploader} />\n          <Route path=\"/SRLegacy\" component={SRLegacy} />\n          <Route path=\"/404\" component={NotFound} />\n          <Route path=\"/WaitTaskV2\" component={WaitTAskV2} />\n          <Route path=\"/AbstractMigrate\" component={AbstractMigrate} />\n          <Route path=\"/Sapling\" component={Sapling} />\n          <Route path=\"/Haven\" component={Haven} />\n          <Route path=\"/StratRoulette\" component={StratRoulette} />\n          <Route path=\"/Alchemy\" component={Alchemy} />\n          <Route path=\"/ExerciseStatus\" component={ExerciseStatus} />\n          <Route path=\"/EmployeeOnboarding\" component={EmployeeOnboarding} />\n          <Route path=\"/Ink\" component={Ink} />\n          <Route path=\"/Vesta\" component={Vesta} />\n\n          <Route\n            path=\"/ProductIllustrations\"\n            component={ProductIllustrations}\n          />\n\n          <Route\n            path=\"/DesignSystemsAtBlend\"\n            component={DesignSystemsAtBlend}\n          />\n          <Route path=\"/PrototypingAtBlend\" component={PrototypingAtBlend} />\n          <Redirect from=\"*\" to=\"/404\" />\n          {/* <Route path=\"/dsystemsAtBlend\" component={DesignSystemsAtBlend} /> */}\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}